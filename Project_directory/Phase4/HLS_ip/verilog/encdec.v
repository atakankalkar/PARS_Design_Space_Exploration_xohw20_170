// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="encdec,hls_ip_2017_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.352750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=181,HLS_SYN_FF=13765,HLS_SYN_LUT=16695}" *)

module encdec (
        ap_clk,
        ap_rst_n,
        s_axi_S_AXI_BUNDLE_AWVALID,
        s_axi_S_AXI_BUNDLE_AWREADY,
        s_axi_S_AXI_BUNDLE_AWADDR,
        s_axi_S_AXI_BUNDLE_WVALID,
        s_axi_S_AXI_BUNDLE_WREADY,
        s_axi_S_AXI_BUNDLE_WDATA,
        s_axi_S_AXI_BUNDLE_WSTRB,
        s_axi_S_AXI_BUNDLE_ARVALID,
        s_axi_S_AXI_BUNDLE_ARREADY,
        s_axi_S_AXI_BUNDLE_ARADDR,
        s_axi_S_AXI_BUNDLE_RVALID,
        s_axi_S_AXI_BUNDLE_RREADY,
        s_axi_S_AXI_BUNDLE_RDATA,
        s_axi_S_AXI_BUNDLE_RRESP,
        s_axi_S_AXI_BUNDLE_BVALID,
        s_axi_S_AXI_BUNDLE_BREADY,
        s_axi_S_AXI_BUNDLE_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_pp0_stage0 = 9'd4;
parameter    ap_ST_fsm_pp0_stage1 = 9'd8;
parameter    ap_ST_fsm_state11 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_pp1_stage1 = 9'd64;
parameter    ap_ST_fsm_state20 = 9'd128;
parameter    ap_ST_fsm_state21 = 9'd256;
parameter    C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH = 32;
parameter    C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH = 12;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_S_AXI_BUNDLE_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_S_AXI_BUNDLE_AWVALID;
output   s_axi_S_AXI_BUNDLE_AWREADY;
input  [C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_AWADDR;
input   s_axi_S_AXI_BUNDLE_WVALID;
output   s_axi_S_AXI_BUNDLE_WREADY;
input  [C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_WDATA;
input  [C_S_AXI_S_AXI_BUNDLE_WSTRB_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_WSTRB;
input   s_axi_S_AXI_BUNDLE_ARVALID;
output   s_axi_S_AXI_BUNDLE_ARREADY;
input  [C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_ARADDR;
output   s_axi_S_AXI_BUNDLE_RVALID;
input   s_axi_S_AXI_BUNDLE_RREADY;
output  [C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_RDATA;
output  [1:0] s_axi_S_AXI_BUNDLE_RRESP;
output   s_axi_S_AXI_BUNDLE_BVALID;
input   s_axi_S_AXI_BUNDLE_BREADY;
output  [1:0] s_axi_S_AXI_BUNDLE_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] a_q0;
reg   [7:0] c1_address0;
reg    c1_ce0;
reg    c1_we0;
reg   [15:0] c1_d0;
wire   [15:0] c1_q0;
reg   [7:0] c2_address0;
reg    c2_ce0;
reg    c2_we0;
wire   [15:0] c2_q0;
wire   [15:0] m_q0;
wire   [15:0] p_q0;
wire   [7:0] r2_address0;
reg    r2_ce0;
wire   [15:0] r2_q0;
reg   [8:0] j_i_i_reg_228;
reg   [8:0] j_i3_i_reg_239;
wire   [14:0] grp_mod_r_fu_390_ap_return;
reg   [14:0] reg_395;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_i_i_reg_478;
reg   [0:0] ap_reg_pp0_iter2_exitcond_i_i_reg_478;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state13_pp1_stage1_iter0;
wire    ap_block_state15_pp1_stage1_iter1;
wire    ap_block_state17_pp1_stage1_iter2;
wire    ap_block_state19_pp1_stage1_iter3;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] exitcond_i4_i_reg_502;
reg   [0:0] ap_reg_pp1_iter2_exitcond_i4_i_reg_502;
wire   [0:0] exitcond_i_i_fu_399_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond_i_i_reg_478;
reg   [0:0] ap_reg_pp0_iter3_exitcond_i_i_reg_478;
wire   [8:0] j_fu_405_p2;
reg   [8:0] j_reg_482;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] c1_addr_reg_487;
reg   [7:0] ap_reg_pp0_iter1_c1_addr_reg_487;
reg   [7:0] ap_reg_pp0_iter2_c1_addr_reg_487;
reg   [7:0] ap_reg_pp0_iter3_c1_addr_reg_487;
wire   [31:0] tmp_170_i_i_fu_472_p2;
reg   [31:0] tmp_170_i_i_reg_497;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] exitcond_i4_i_fu_430_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_i4_i_reg_502;
reg   [0:0] ap_reg_pp1_iter3_exitcond_i4_i_reg_502;
wire   [8:0] j_9_fu_436_p2;
reg   [8:0] j_9_reg_506;
reg    ap_enable_reg_pp1_iter0;
reg   [7:0] c1_addr_1_reg_511;
reg   [7:0] ap_reg_pp1_iter1_c1_addr_1_reg_511;
reg   [7:0] ap_reg_pp1_iter2_c1_addr_1_reg_511;
reg   [7:0] ap_reg_pp1_iter3_c1_addr_1_reg_511;
wire   [31:0] tmp_176_i_i_cast_fu_462_p1;
wire    ap_CS_fsm_state2;
wire    grp_RLWE_enc2_fu_250_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state11;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter3;
wire    grp_RLWE_enc2_fu_250_ap_start;
wire    grp_RLWE_enc2_fu_250_ap_idle;
wire    grp_RLWE_enc2_fu_250_ap_ready;
wire   [7:0] grp_RLWE_enc2_fu_250_a_address0;
wire    grp_RLWE_enc2_fu_250_a_ce0;
wire   [7:0] grp_RLWE_enc2_fu_250_c1_address0;
wire    grp_RLWE_enc2_fu_250_c1_ce0;
wire    grp_RLWE_enc2_fu_250_c1_we0;
wire   [15:0] grp_RLWE_enc2_fu_250_c1_d0;
wire   [7:0] grp_RLWE_enc2_fu_250_c2_address0;
wire    grp_RLWE_enc2_fu_250_c2_ce0;
wire    grp_RLWE_enc2_fu_250_c2_we0;
wire   [15:0] grp_RLWE_enc2_fu_250_c2_d0;
wire   [7:0] grp_RLWE_enc2_fu_250_m_address0;
wire    grp_RLWE_enc2_fu_250_m_ce0;
wire   [7:0] grp_RLWE_enc2_fu_250_p_address0;
wire    grp_RLWE_enc2_fu_250_p_ce0;
wire    grp_inv_ntt2_fu_384_ap_start;
wire    grp_inv_ntt2_fu_384_ap_done;
wire    grp_inv_ntt2_fu_384_ap_idle;
wire    grp_inv_ntt2_fu_384_ap_ready;
wire   [7:0] grp_inv_ntt2_fu_384_a_address0;
wire    grp_inv_ntt2_fu_384_a_ce0;
wire    grp_inv_ntt2_fu_384_a_we0;
wire   [15:0] grp_inv_ntt2_fu_384_a_d0;
reg   [31:0] grp_mod_r_fu_390_x;
reg    grp_mod_r_fu_390_ap_ce;
reg   [8:0] ap_phi_mux_j_i_i_phi_fu_232_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_j_i3_i_phi_fu_243_p4;
wire    ap_block_pp1_stage0;
reg    ap_reg_grp_RLWE_enc2_fu_250_ap_start;
reg    ap_reg_grp_inv_ntt2_fu_384_ap_start;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_block_pp1_stage1;
wire   [63:0] tmp_i_i_fu_411_p1;
wire   [63:0] tmp_i5_i_fu_442_p1;
wire  signed [15:0] p_trunc_ext_fu_425_p1;
wire    ap_block_pp0_stage1;
wire  signed [15:0] p_trunc3_ext_fu_467_p1;
wire   [16:0] tmp_i8_i_cast_fu_448_p1;
wire   [16:0] tmp_175_i_i_cast_fu_452_p1;
wire   [16:0] tmp_176_i_i_fu_456_p2;
wire   [15:0] tmp_170_i_i_fu_472_p0;
wire   [15:0] tmp_170_i_i_fu_472_p1;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [31:0] tmp_170_i_i_fu_472_p00;
wire   [31:0] tmp_170_i_i_fu_472_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_reg_grp_RLWE_enc2_fu_250_ap_start = 1'b0;
#0 ap_reg_grp_inv_ntt2_fu_384_ap_start = 1'b0;
end

encdec_S_AXI_BUNDLE_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH ))
encdec_S_AXI_BUNDLE_s_axi_U(
    .AWVALID(s_axi_S_AXI_BUNDLE_AWVALID),
    .AWREADY(s_axi_S_AXI_BUNDLE_AWREADY),
    .AWADDR(s_axi_S_AXI_BUNDLE_AWADDR),
    .WVALID(s_axi_S_AXI_BUNDLE_WVALID),
    .WREADY(s_axi_S_AXI_BUNDLE_WREADY),
    .WDATA(s_axi_S_AXI_BUNDLE_WDATA),
    .WSTRB(s_axi_S_AXI_BUNDLE_WSTRB),
    .ARVALID(s_axi_S_AXI_BUNDLE_ARVALID),
    .ARREADY(s_axi_S_AXI_BUNDLE_ARREADY),
    .ARADDR(s_axi_S_AXI_BUNDLE_ARADDR),
    .RVALID(s_axi_S_AXI_BUNDLE_RVALID),
    .RREADY(s_axi_S_AXI_BUNDLE_RREADY),
    .RDATA(s_axi_S_AXI_BUNDLE_RDATA),
    .RRESP(s_axi_S_AXI_BUNDLE_RRESP),
    .BVALID(s_axi_S_AXI_BUNDLE_BVALID),
    .BREADY(s_axi_S_AXI_BUNDLE_BREADY),
    .BRESP(s_axi_S_AXI_BUNDLE_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .a_address0(grp_RLWE_enc2_fu_250_a_address0),
    .a_ce0(grp_RLWE_enc2_fu_250_a_ce0),
    .a_q0(a_q0),
    .c1_address0(c1_address0),
    .c1_ce0(c1_ce0),
    .c1_we0(c1_we0),
    .c1_d0(c1_d0),
    .c1_q0(c1_q0),
    .c2_address0(c2_address0),
    .c2_ce0(c2_ce0),
    .c2_we0(c2_we0),
    .c2_d0(grp_RLWE_enc2_fu_250_c2_d0),
    .c2_q0(c2_q0),
    .m_address0(grp_RLWE_enc2_fu_250_m_address0),
    .m_ce0(grp_RLWE_enc2_fu_250_m_ce0),
    .m_q0(m_q0),
    .p_address0(grp_RLWE_enc2_fu_250_p_address0),
    .p_ce0(grp_RLWE_enc2_fu_250_p_ce0),
    .p_q0(p_q0),
    .r2_address0(r2_address0),
    .r2_ce0(r2_ce0),
    .r2_q0(r2_q0)
);

RLWE_enc2 grp_RLWE_enc2_fu_250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_RLWE_enc2_fu_250_ap_start),
    .ap_done(grp_RLWE_enc2_fu_250_ap_done),
    .ap_idle(grp_RLWE_enc2_fu_250_ap_idle),
    .ap_ready(grp_RLWE_enc2_fu_250_ap_ready),
    .a_address0(grp_RLWE_enc2_fu_250_a_address0),
    .a_ce0(grp_RLWE_enc2_fu_250_a_ce0),
    .a_q0(a_q0),
    .c1_address0(grp_RLWE_enc2_fu_250_c1_address0),
    .c1_ce0(grp_RLWE_enc2_fu_250_c1_ce0),
    .c1_we0(grp_RLWE_enc2_fu_250_c1_we0),
    .c1_d0(grp_RLWE_enc2_fu_250_c1_d0),
    .c1_q0(c1_q0),
    .c2_address0(grp_RLWE_enc2_fu_250_c2_address0),
    .c2_ce0(grp_RLWE_enc2_fu_250_c2_ce0),
    .c2_we0(grp_RLWE_enc2_fu_250_c2_we0),
    .c2_d0(grp_RLWE_enc2_fu_250_c2_d0),
    .c2_q0(c2_q0),
    .m_address0(grp_RLWE_enc2_fu_250_m_address0),
    .m_ce0(grp_RLWE_enc2_fu_250_m_ce0),
    .m_q0(m_q0),
    .p_address0(grp_RLWE_enc2_fu_250_p_address0),
    .p_ce0(grp_RLWE_enc2_fu_250_p_ce0),
    .p_q0(p_q0)
);

inv_ntt2 grp_inv_ntt2_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_inv_ntt2_fu_384_ap_start),
    .ap_done(grp_inv_ntt2_fu_384_ap_done),
    .ap_idle(grp_inv_ntt2_fu_384_ap_idle),
    .ap_ready(grp_inv_ntt2_fu_384_ap_ready),
    .a_address0(grp_inv_ntt2_fu_384_a_address0),
    .a_ce0(grp_inv_ntt2_fu_384_a_ce0),
    .a_we0(grp_inv_ntt2_fu_384_a_we0),
    .a_d0(grp_inv_ntt2_fu_384_a_d0),
    .a_q0(c1_q0)
);

mod_r grp_mod_r_fu_390(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x(grp_mod_r_fu_390_x),
    .ap_return(grp_mod_r_fu_390_ap_return),
    .ap_ce(grp_mod_r_fu_390_ap_ce)
);

encdec_mul_mul_168jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_168jQ_U99(
    .din0(tmp_170_i_i_fu_472_p0),
    .din1(tmp_170_i_i_fu_472_p1),
    .dout(tmp_170_i_i_fu_472_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_RLWE_enc2_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((grp_RLWE_enc2_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_RLWE_enc2_fu_250_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_reg_grp_RLWE_enc2_fu_250_ap_start <= 1'b1;
        end else if ((grp_RLWE_enc2_fu_250_ap_ready == 1'b1)) begin
            ap_reg_grp_RLWE_enc2_fu_250_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_inv_ntt2_fu_384_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_reg_grp_inv_ntt2_fu_384_ap_start <= 1'b1;
        end else if ((grp_inv_ntt2_fu_384_ap_ready == 1'b1)) begin
            ap_reg_grp_inv_ntt2_fu_384_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_i3_i_reg_239 <= 9'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i4_i_reg_502 == 1'd0))) begin
        j_i3_i_reg_239 <= j_9_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i_i_reg_478 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_i_i_reg_228 <= j_reg_482;
    end else if (((grp_RLWE_enc2_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_i_i_reg_228 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_c1_addr_reg_487 <= c1_addr_reg_487;
        ap_reg_pp0_iter1_exitcond_i_i_reg_478 <= exitcond_i_i_reg_478;
        ap_reg_pp0_iter2_c1_addr_reg_487 <= ap_reg_pp0_iter1_c1_addr_reg_487;
        ap_reg_pp0_iter2_exitcond_i_i_reg_478 <= ap_reg_pp0_iter1_exitcond_i_i_reg_478;
        ap_reg_pp0_iter3_c1_addr_reg_487 <= ap_reg_pp0_iter2_c1_addr_reg_487;
        ap_reg_pp0_iter3_exitcond_i_i_reg_478 <= ap_reg_pp0_iter2_exitcond_i_i_reg_478;
        exitcond_i_i_reg_478 <= exitcond_i_i_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_reg_pp1_iter1_c1_addr_1_reg_511 <= c1_addr_1_reg_511;
        ap_reg_pp1_iter1_exitcond_i4_i_reg_502 <= exitcond_i4_i_reg_502;
        ap_reg_pp1_iter2_c1_addr_1_reg_511 <= ap_reg_pp1_iter1_c1_addr_1_reg_511;
        ap_reg_pp1_iter2_exitcond_i4_i_reg_502 <= ap_reg_pp1_iter1_exitcond_i4_i_reg_502;
        ap_reg_pp1_iter3_c1_addr_1_reg_511 <= ap_reg_pp1_iter2_c1_addr_1_reg_511;
        ap_reg_pp1_iter3_exitcond_i4_i_reg_502 <= ap_reg_pp1_iter2_exitcond_i4_i_reg_502;
        exitcond_i4_i_reg_502 <= exitcond_i4_i_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i4_i_fu_430_p2 == 1'd0))) begin
        c1_addr_1_reg_511 <= tmp_i5_i_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i_i_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c1_addr_reg_487 <= tmp_i_i_fu_411_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_9_reg_506 <= j_9_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_reg_482 <= j_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_reg_pp1_iter2_exitcond_i4_i_reg_502 == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_reg_pp0_iter2_exitcond_i_i_reg_478 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_395 <= grp_mod_r_fu_390_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_i_i_reg_478 == 1'd0))) begin
        tmp_170_i_i_reg_497 <= tmp_170_i_i_fu_472_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_i_fu_399_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i4_i_fu_430_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_inv_ntt2_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i4_i_reg_502 == 1'd0))) begin
        ap_phi_mux_j_i3_i_phi_fu_243_p4 = j_9_reg_506;
    end else begin
        ap_phi_mux_j_i3_i_phi_fu_243_p4 = j_i3_i_reg_239;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i_i_reg_478 == 1'd0))) begin
        ap_phi_mux_j_i_i_phi_fu_232_p4 = j_reg_482;
    end else begin
        ap_phi_mux_j_i_i_phi_fu_232_p4 = j_i_i_reg_228;
    end
end

always @ (*) begin
    if (((grp_inv_ntt2_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        c1_address0 = ap_reg_pp1_iter3_c1_addr_1_reg_511;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c1_address0 = tmp_i5_i_fu_442_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        c1_address0 = ap_reg_pp0_iter3_c1_addr_reg_487;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c1_address0 = tmp_i_i_fu_411_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_address0 = grp_inv_ntt2_fu_384_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_address0 = grp_RLWE_enc2_fu_250_c1_address0;
    end else begin
        c1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        c1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_ce0 = grp_inv_ntt2_fu_384_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_ce0 = grp_RLWE_enc2_fu_250_c1_ce0;
    end else begin
        c1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        c1_d0 = p_trunc3_ext_fu_467_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        c1_d0 = p_trunc_ext_fu_425_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_d0 = grp_inv_ntt2_fu_384_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_d0 = grp_RLWE_enc2_fu_250_c1_d0;
    end else begin
        c1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_reg_pp1_iter3_exitcond_i4_i_reg_502 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_reg_pp0_iter3_exitcond_i_i_reg_478 == 1'd0)))) begin
        c1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_we0 = grp_inv_ntt2_fu_384_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_we0 = grp_RLWE_enc2_fu_250_c1_we0;
    end else begin
        c1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c2_address0 = tmp_i5_i_fu_442_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c2_address0 = grp_RLWE_enc2_fu_250_c2_address0;
    end else begin
        c2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c2_ce0 = grp_RLWE_enc2_fu_250_c2_ce0;
    end else begin
        c2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c2_we0 = grp_RLWE_enc2_fu_250_c2_we0;
    end else begin
        c2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_mod_r_fu_390_ap_ce = 1'b1;
    end else begin
        grp_mod_r_fu_390_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_i4_i_reg_502 == 1'd0))) begin
        grp_mod_r_fu_390_x = tmp_176_i_i_cast_fu_462_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_i_i_reg_478 == 1'd0))) begin
        grp_mod_r_fu_390_x = tmp_170_i_i_reg_497;
    end else begin
        grp_mod_r_fu_390_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_ce0 = 1'b1;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_RLWE_enc2_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_fu_399_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_fu_399_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_i4_i_fu_430_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_i4_i_fu_430_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_inv_ntt2_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond_i4_i_fu_430_p2 = ((ap_phi_mux_j_i3_i_phi_fu_243_p4 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_399_p2 = ((ap_phi_mux_j_i_i_phi_fu_232_p4 == 9'd256) ? 1'b1 : 1'b0);

assign grp_RLWE_enc2_fu_250_ap_start = ap_reg_grp_RLWE_enc2_fu_250_ap_start;

assign grp_inv_ntt2_fu_384_ap_start = ap_reg_grp_inv_ntt2_fu_384_ap_start;

assign j_9_fu_436_p2 = (ap_phi_mux_j_i3_i_phi_fu_243_p4 + 9'd1);

assign j_fu_405_p2 = (ap_phi_mux_j_i_i_phi_fu_232_p4 + 9'd1);

assign p_trunc3_ext_fu_467_p1 = $signed(reg_395);

assign p_trunc_ext_fu_425_p1 = $signed(reg_395);

assign r2_address0 = tmp_i_i_fu_411_p1;

assign tmp_170_i_i_fu_472_p0 = tmp_170_i_i_fu_472_p00;

assign tmp_170_i_i_fu_472_p00 = c1_q0;

assign tmp_170_i_i_fu_472_p1 = tmp_170_i_i_fu_472_p10;

assign tmp_170_i_i_fu_472_p10 = r2_q0;

assign tmp_175_i_i_cast_fu_452_p1 = c2_q0;

assign tmp_176_i_i_cast_fu_462_p1 = tmp_176_i_i_fu_456_p2;

assign tmp_176_i_i_fu_456_p2 = (tmp_i8_i_cast_fu_448_p1 + tmp_175_i_i_cast_fu_452_p1);

assign tmp_i5_i_fu_442_p1 = ap_phi_mux_j_i3_i_phi_fu_243_p4;

assign tmp_i8_i_cast_fu_448_p1 = c1_q0;

assign tmp_i_i_fu_411_p1 = ap_phi_mux_j_i_i_phi_fu_232_p4;

endmodule //encdec
