// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_ntt2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_address1,
        a_ce1,
        a_we1,
        a_d1,
        a_q1
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 26'd2097152;
parameter    ap_ST_fsm_pp1_stage1 = 26'd4194304;
parameter    ap_ST_fsm_pp1_stage2 = 26'd8388608;
parameter    ap_ST_fsm_pp1_stage3 = 26'd16777216;
parameter    ap_ST_fsm_state38 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
output   a_we0;
output  [15:0] a_d0;
input  [15:0] a_q0;
output  [7:0] a_address1;
output   a_ce1;
output   a_we1;
output  [15:0] a_d1;
input  [15:0] a_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] a_address0;
reg a_ce0;
reg a_we0;
reg[15:0] a_d0;
reg[7:0] a_address1;
reg a_ce1;
reg a_we1;
reg[15:0] a_d1;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] primrt_omega_table_address0;
reg    primrt_omega_table_ce0;
wire   [12:0] primrt_omega_table_q0;
wire   [2:0] primrt_omega_table_address1;
reg    primrt_omega_table_ce1;
wire   [12:0] primrt_omega_table_q1;
reg   [7:0] j_1_reg_201;
reg   [14:0] omega_1_reg_212;
reg   [15:0] reg_233;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state23_pp1_stage1_iter0;
wire    ap_block_state27_pp1_stage1_iter1;
wire    ap_block_state31_pp1_stage1_iter2;
wire    ap_block_state35_pp1_stage1_iter3;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] exitcond_reg_829;
wire   [14:0] grp_mod_r_fu_223_ap_return;
reg   [14:0] reg_237;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_pp1_stage3;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state25_pp1_stage3_iter0;
wire    ap_block_state29_pp1_stage3_iter1;
wire    ap_block_state33_pp1_stage3_iter2;
wire    ap_block_state37_pp1_stage3_iter3;
wire    ap_block_pp1_stage3_11001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_reg_829;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] ap_reg_pp1_iter3_exitcond_reg_829;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state24_pp1_stage2_iter0;
wire    ap_block_state28_pp1_stage2_iter1;
wire    ap_block_state32_pp1_stage2_iter2;
wire    ap_block_state36_pp1_stage2_iter3;
wire    ap_block_pp1_stage2_11001;
wire   [0:0] exitcond1_fu_242_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] i_3_fu_248_p2;
reg   [2:0] i_3_reg_673;
wire   [28:0] primrt_cast_fu_264_p1;
reg   [28:0] primrt_cast_reg_688;
wire    ap_CS_fsm_state3;
wire   [14:0] primrt_omega_table_l_2_fu_268_p1;
wire   [31:0] m_2_fu_272_p2;
reg   [31:0] m_2_reg_698;
wire   [31:0] tmp_145_fu_348_p3;
reg   [31:0] tmp_145_reg_704;
wire   [0:0] tmp_146_fu_360_p2;
wire    ap_CS_fsm_state4;
wire   [31:0] omega_fu_365_p1;
reg   [31:0] omega_reg_713;
wire   [28:0] omega_cast_fu_369_p1;
reg   [28:0] omega_cast_reg_719;
reg   [7:0] a_addr_13_reg_727;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_fu_383_p2;
reg   [7:0] a_addr_14_reg_732;
reg   [7:0] a_addr_15_reg_738;
reg   [7:0] a_addr_16_reg_744;
wire   [31:0] k_2_fu_439_p2;
reg   [31:0] k_2_reg_749;
wire   [31:0] tmp_111_fu_640_p2;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_118_fu_646_p2;
reg   [15:0] a_load_12_reg_764;
wire   [16:0] u1_2_cast_fu_452_p1;
reg   [16:0] u1_2_cast_reg_769;
wire    ap_CS_fsm_state10;
wire   [16:0] t1_5_cast_fu_460_p1;
reg   [16:0] t1_5_cast_reg_774;
wire   [16:0] u2_cast_fu_464_p1;
reg   [16:0] u2_cast_reg_779;
wire   [16:0] t2_cast_fu_471_p1;
reg   [16:0] t2_cast_reg_784;
wire   [31:0] tmp_153_cast_fu_481_p1;
wire   [31:0] tmp_155_cast_fu_492_p1;
wire  signed [31:0] tmp_157_cast_fu_501_p1;
wire    ap_CS_fsm_state11;
wire  signed [31:0] tmp_159_cast_fu_510_p1;
wire   [28:0] omega_6_fu_652_p2;
reg   [28:0] omega_6_reg_809;
wire    ap_CS_fsm_state16;
wire   [31:0] j_8_fu_535_p2;
reg   [31:0] j_8_reg_814;
wire   [31:0] omega_10_cast_fu_541_p1;
wire    ap_CS_fsm_state17;
wire  signed [15:0] omega_1_cast2_fu_545_p1;
reg  signed [15:0] omega_1_cast2_reg_824;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state22_pp1_stage0_iter0;
wire    ap_block_state26_pp1_stage0_iter1;
wire    ap_block_state30_pp1_stage0_iter2;
wire    ap_block_state34_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_fu_549_p2;
reg   [0:0] ap_reg_pp1_iter2_exitcond_reg_829;
wire   [7:0] j_7_fu_555_p2;
reg   [7:0] j_7_reg_833;
wire   [7:0] tmp_147_fu_565_p2;
reg   [7:0] tmp_147_reg_838;
reg   [7:0] ap_reg_pp1_iter1_tmp_147_reg_838;
reg   [7:0] a_addr_reg_843;
reg   [7:0] ap_reg_pp1_iter1_a_addr_reg_843;
reg   [7:0] ap_reg_pp1_iter2_a_addr_reg_843;
reg   [7:0] ap_reg_pp1_iter3_a_addr_reg_843;
wire   [31:0] omega_8_cast_fu_582_p1;
wire   [31:0] t1_fu_663_p2;
reg   [31:0] t1_reg_854;
reg   [7:0] a_addr_12_reg_864;
reg   [7:0] ap_reg_pp1_iter3_a_addr_12_reg_864;
wire   [31:0] tmp_132_cast_fu_615_p1;
wire   [16:0] tmp_103_fu_620_p2;
reg   [16:0] tmp_103_reg_875;
wire  signed [31:0] tmp_134_cast_fu_626_p1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state22;
wire    ap_block_pp1_stage3_subdone;
reg    ap_enable_reg_pp1_iter2;
reg   [31:0] grp_mod_r_fu_223_x;
reg    grp_mod_r_fu_223_ap_ce;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state38;
reg   [31:0] grp_mod_r_fu_228_x;
wire   [14:0] grp_mod_r_fu_228_ap_return;
reg    grp_mod_r_fu_228_ap_ce;
reg   [31:0] m_reg_146;
reg   [2:0] i_reg_158;
reg   [31:0] j_reg_169;
reg   [14:0] omega_0_in_reg_181;
reg   [31:0] k_reg_190;
reg   [7:0] ap_phi_mux_j_1_phi_fu_205_p4;
wire    ap_block_pp1_stage0;
reg   [14:0] ap_phi_mux_omega_1_phi_fu_216_p4;
wire    ap_block_pp1_stage3;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire   [63:0] tmp_fu_254_p1;
wire   [63:0] tmp_s_fu_259_p1;
wire  signed [63:0] tmp_107_fu_395_p1;
wire  signed [63:0] tmp_109_fu_406_p1;
wire  signed [63:0] tmp_114_fu_423_p1;
wire  signed [63:0] tmp_116_fu_434_p1;
wire   [63:0] tmp_97_fu_577_p1;
wire   [63:0] tmp_100_fu_593_p1;
wire  signed [15:0] p_trunc_ext_fu_515_p1;
wire  signed [15:0] p_trunc4_ext_fu_520_p1;
wire  signed [15:0] p_trunc5_ext_fu_525_p1;
wire  signed [15:0] p_trunc6_ext_fu_530_p1;
wire  signed [15:0] p_trunc7_ext_fu_630_p1;
wire  signed [15:0] p_trunc8_ext_fu_635_p1;
wire   [31:0] m_op_op4_fu_286_p2;
wire   [31:0] p_neg_fu_300_p2;
wire   [30:0] p_lshr_fu_306_p4;
wire   [0:0] tmp_141_fu_292_p3;
wire   [30:0] p_neg_t_fu_316_p2;
wire   [30:0] tmp_142_fu_322_p4;
wire   [0:0] tmp_140_fu_278_p3;
wire   [30:0] tmp_143_fu_332_p3;
wire   [30:0] tmp_144_fu_340_p3;
wire  signed [15:0] omega_0_in_cast_fu_356_p1;
wire   [23:0] tmp_148_fu_373_p4;
wire   [31:0] tmp_106_fu_389_p2;
wire   [31:0] tmp_108_fu_400_p2;
wire   [31:0] tmp1_fu_411_p2;
wire   [31:0] tmp_113_fu_417_p2;
wire   [31:0] tmp_115_fu_428_p2;
wire  signed [15:0] t1_5_trunc_ext_fu_456_p1;
wire  signed [15:0] t2_trunc_ext_fu_467_p1;
wire   [16:0] tmp_120_fu_475_p2;
wire   [16:0] tmp_122_fu_486_p2;
wire   [16:0] tmp_124_fu_497_p2;
wire   [16:0] tmp_126_fu_506_p2;
wire   [7:0] tmp_96_fu_571_p2;
wire   [29:0] omega_5_fu_656_p2;
wire  signed [15:0] t1_4_trunc_ext_fu_597_p1;
wire   [16:0] u1_cast_fu_605_p1;
wire   [16:0] t1_4_cast_fu_601_p1;
wire   [16:0] tmp_101_fu_609_p2;
wire   [15:0] tmp_111_fu_640_p0;
wire   [15:0] tmp_111_fu_640_p1;
wire   [15:0] tmp_118_fu_646_p0;
wire   [15:0] tmp_118_fu_646_p1;
wire   [12:0] omega_6_fu_652_p0;
wire   [15:0] omega_6_fu_652_p1;
wire   [13:0] omega_5_fu_656_p0;
wire   [15:0] omega_5_fu_656_p1;
wire   [15:0] t1_fu_663_p0;
wire   [15:0] t1_fu_663_p1;
reg   [25:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [29:0] omega_5_fu_656_p10;
wire   [31:0] t1_fu_663_p00;
wire   [31:0] t1_fu_663_p10;
wire   [31:0] tmp_111_fu_640_p00;
wire   [31:0] tmp_118_fu_646_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

fwd_ntt2_primrt_o7jG #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
primrt_omega_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(primrt_omega_table_address0),
    .ce0(primrt_omega_table_ce0),
    .q0(primrt_omega_table_q0),
    .address1(primrt_omega_table_address1),
    .ce1(primrt_omega_table_ce1),
    .q1(primrt_omega_table_q1)
);

mod_r grp_mod_r_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_mod_r_fu_223_x),
    .ap_return(grp_mod_r_fu_223_ap_return),
    .ap_ce(grp_mod_r_fu_223_ap_ce)
);

mod_r grp_mod_r_fu_228(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_mod_r_fu_228_x),
    .ap_return(grp_mod_r_fu_228_ap_return),
    .ap_ce(grp_mod_r_fu_228_ap_ce)
);

encdec_mul_mul_168jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_168jQ_U68(
    .din0(tmp_111_fu_640_p0),
    .din1(tmp_111_fu_640_p1),
    .dout(tmp_111_fu_640_p2)
);

encdec_mul_mul_168jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_168jQ_U69(
    .din0(tmp_118_fu_646_p0),
    .din1(tmp_118_fu_646_p1),
    .dout(tmp_118_fu_646_p2)
);

encdec_mul_mul_139j0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
encdec_mul_mul_139j0_U70(
    .din0(omega_6_fu_652_p0),
    .din1(omega_6_fu_652_p1),
    .dout(omega_6_fu_652_p2)
);

encdec_mul_mul_14bak #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
encdec_mul_mul_14bak_U71(
    .din0(omega_5_fu_656_p0),
    .din1(omega_5_fu_656_p1),
    .dout(omega_5_fu_656_p2)
);

encdec_mul_mul_168jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_168jQ_U72(
    .din0(t1_fu_663_p0),
    .din1(t1_fu_663_p1),
    .dout(t1_fu_663_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state22)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_146_fu_360_p2 == 1'd1))) begin
        i_reg_158 <= i_3_reg_673;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_158 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
        j_1_reg_201 <= 8'd0;
    end else if (((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        j_1_reg_201 <= j_7_reg_833;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_reg_169 <= j_8_reg_814;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_169 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_reg_190 <= k_2_reg_749;
    end else if (((tmp_146_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        k_reg_190 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_146_fu_360_p2 == 1'd1))) begin
                m_reg_146[31 : 1] <= m_2_reg_698[31 : 1];
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                m_reg_146[1] <= 1'b1;
        m_reg_146[2] <= 1'b0;
        m_reg_146[3] <= 1'b0;
        m_reg_146[4] <= 1'b0;
        m_reg_146[5] <= 1'b0;
        m_reg_146[6] <= 1'b0;
        m_reg_146[7] <= 1'b0;
        m_reg_146[8] <= 1'b0;
        m_reg_146[9] <= 1'b0;
        m_reg_146[10] <= 1'b0;
        m_reg_146[11] <= 1'b0;
        m_reg_146[12] <= 1'b0;
        m_reg_146[13] <= 1'b0;
        m_reg_146[14] <= 1'b0;
        m_reg_146[15] <= 1'b0;
        m_reg_146[16] <= 1'b0;
        m_reg_146[17] <= 1'b0;
        m_reg_146[18] <= 1'b0;
        m_reg_146[19] <= 1'b0;
        m_reg_146[20] <= 1'b0;
        m_reg_146[21] <= 1'b0;
        m_reg_146[22] <= 1'b0;
        m_reg_146[23] <= 1'b0;
        m_reg_146[24] <= 1'b0;
        m_reg_146[25] <= 1'b0;
        m_reg_146[26] <= 1'b0;
        m_reg_146[27] <= 1'b0;
        m_reg_146[28] <= 1'b0;
        m_reg_146[29] <= 1'b0;
        m_reg_146[30] <= 1'b0;
        m_reg_146[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        omega_0_in_reg_181 <= grp_mod_r_fu_223_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        omega_0_in_reg_181 <= primrt_omega_table_l_2_fu_268_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
        omega_1_reg_212 <= 15'd1065;
    end else if (((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        omega_1_reg_212 <= grp_mod_r_fu_223_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp1_iter1_exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_addr_12_reg_864[7 : 1] <= tmp_100_fu_593_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        a_addr_13_reg_727 <= tmp_107_fu_395_p1;
        a_addr_14_reg_732[7 : 1] <= tmp_109_fu_406_p1[7 : 1];
        a_addr_15_reg_738 <= tmp_114_fu_423_p1;
        a_addr_16_reg_744[7 : 1] <= tmp_116_fu_434_p1[7 : 1];
        k_2_reg_749 <= k_2_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_549_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_addr_reg_843[7 : 1] <= tmp_97_fu_577_p1[7 : 1];
        tmp_147_reg_838[7 : 1] <= tmp_147_fu_565_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_load_12_reg_764 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_reg_pp1_iter1_a_addr_reg_843[7 : 1] <= a_addr_reg_843[7 : 1];
        ap_reg_pp1_iter1_exitcond_reg_829 <= exitcond_reg_829;
        ap_reg_pp1_iter1_tmp_147_reg_838[7 : 1] <= tmp_147_reg_838[7 : 1];
        ap_reg_pp1_iter2_a_addr_reg_843[7 : 1] <= ap_reg_pp1_iter1_a_addr_reg_843[7 : 1];
        ap_reg_pp1_iter2_exitcond_reg_829 <= ap_reg_pp1_iter1_exitcond_reg_829;
        ap_reg_pp1_iter3_a_addr_12_reg_864[7 : 1] <= a_addr_12_reg_864[7 : 1];
        ap_reg_pp1_iter3_a_addr_reg_843[7 : 1] <= ap_reg_pp1_iter2_a_addr_reg_843[7 : 1];
        ap_reg_pp1_iter3_exitcond_reg_829 <= ap_reg_pp1_iter2_exitcond_reg_829;
        exitcond_reg_829 <= exitcond_fu_549_p2;
        omega_1_cast2_reg_824 <= omega_1_cast2_fu_545_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_673 <= i_3_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_7_reg_833 <= j_7_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_8_reg_814 <= j_8_fu_535_p2;
        omega_6_reg_809 <= omega_6_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m_2_reg_698[31 : 2] <= m_2_fu_272_p2[31 : 2];
        primrt_cast_reg_688[12 : 0] <= primrt_cast_fu_264_p1[12 : 0];
        tmp_145_reg_704[31 : 1] <= tmp_145_fu_348_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_146_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        omega_cast_reg_719[15 : 0] <= omega_cast_fu_369_p1[15 : 0];
        omega_reg_713[15 : 0] <= omega_fu_365_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        reg_233 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_reg_pp1_iter3_exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_reg_pp1_iter3_exitcond_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_reg_pp1_iter1_exitcond_reg_829 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001)))) begin
        reg_237 <= grp_mod_r_fu_223_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t1_5_cast_reg_774[15 : 0] <= t1_5_cast_fu_460_p1[15 : 0];
        t2_cast_reg_784[15 : 0] <= t2_cast_fu_471_p1[15 : 0];
        u1_2_cast_reg_769[15 : 0] <= u1_2_cast_fu_452_p1[15 : 0];
        u2_cast_reg_779[15 : 0] <= u2_cast_fu_464_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        t1_reg_854 <= t1_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp1_iter2_exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_103_reg_875 <= tmp_103_fu_620_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        a_address0 = ap_reg_pp1_iter3_a_addr_12_reg_864;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_address0 = tmp_97_fu_577_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_address0 = a_addr_15_reg_738;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        a_address0 = a_addr_13_reg_727;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = tmp_109_fu_406_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        a_address1 = ap_reg_pp1_iter3_a_addr_reg_843;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_address1 = tmp_100_fu_593_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_address1 = a_addr_16_reg_744;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_address1 = a_addr_14_reg_732;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address1 = a_addr_15_reg_738;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = tmp_116_fu_434_p1;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        a_d0 = p_trunc7_ext_fu_630_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_d0 = p_trunc5_ext_fu_525_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_d0 = p_trunc_ext_fu_515_p1;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        a_d1 = p_trunc8_ext_fu_635_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_d1 = p_trunc6_ext_fu_530_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_d1 = p_trunc4_ext_fu_520_p1;
    end else begin
        a_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((ap_reg_pp1_iter3_exitcond_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((ap_reg_pp1_iter3_exitcond_reg_829 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001)))) begin
        a_we1 = 1'b1;
    end else begin
        a_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_549_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_j_1_phi_fu_205_p4 = j_7_reg_833;
    end else begin
        ap_phi_mux_j_1_phi_fu_205_p4 = j_1_reg_201;
    end
end

always @ (*) begin
    if (((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_omega_1_phi_fu_216_p4 = grp_mod_r_fu_223_ap_return;
    end else begin
        ap_phi_mux_omega_1_phi_fu_216_p4 = omega_1_reg_212;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b1 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b1 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3)))) begin
        grp_mod_r_fu_223_ap_ce = 1'b0;
    end else begin
        grp_mod_r_fu_223_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter2_exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        grp_mod_r_fu_223_x = tmp_134_cast_fu_626_p1;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_mod_r_fu_223_x = tmp_132_cast_fu_615_p1;
    end else if (((exitcond_reg_829 == 1'd0) & (1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        grp_mod_r_fu_223_x = t1_reg_854;
    end else if (((exitcond_fu_549_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_mod_r_fu_223_x = omega_8_cast_fu_582_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_mod_r_fu_223_x = omega_10_cast_fu_541_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mod_r_fu_223_x = tmp_157_cast_fu_501_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mod_r_fu_223_x = tmp_153_cast_fu_481_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mod_r_fu_223_x = tmp_111_fu_640_p2;
    end else begin
        grp_mod_r_fu_223_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_mod_r_fu_228_ap_ce = 1'b1;
    end else begin
        grp_mod_r_fu_228_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mod_r_fu_228_x = tmp_159_cast_fu_510_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mod_r_fu_228_x = tmp_155_cast_fu_492_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mod_r_fu_228_x = tmp_118_fu_646_p2;
    end else begin
        grp_mod_r_fu_228_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce0 = 1'b1;
    end else begin
        primrt_omega_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce1 = 1'b1;
    end else begin
        primrt_omega_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_146_fu_360_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_fu_383_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_549_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_549_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage3_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) & (1'b0 == ap_block_pp1_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage3_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond1_fu_242_p2 = ((i_reg_158 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond_fu_549_p2 = ((ap_phi_mux_j_1_phi_fu_205_p4 == 8'd128) ? 1'b1 : 1'b0);

assign i_3_fu_248_p2 = (i_reg_158 + 3'd1);

assign icmp_fu_383_p2 = (($signed(tmp_148_fu_373_p4) < $signed(24'd1)) ? 1'b1 : 1'b0);

assign j_7_fu_555_p2 = (ap_phi_mux_j_1_phi_fu_205_p4 + 8'd1);

assign j_8_fu_535_p2 = (j_reg_169 + 32'd2);

assign k_2_fu_439_p2 = (m_2_reg_698 + k_reg_190);

assign m_2_fu_272_p2 = m_reg_146 << 32'd1;

assign m_op_op4_fu_286_p2 = (m_reg_146 | 32'd1);

assign omega_0_in_cast_fu_356_p1 = $signed(omega_0_in_reg_181);

assign omega_10_cast_fu_541_p1 = omega_6_reg_809;

assign omega_1_cast2_fu_545_p1 = $signed(ap_phi_mux_omega_1_phi_fu_216_p4);

assign omega_5_fu_656_p0 = 30'd5118;

assign omega_5_fu_656_p1 = omega_5_fu_656_p10;

assign omega_5_fu_656_p10 = $unsigned(omega_1_cast2_fu_545_p1);

assign omega_6_fu_652_p0 = primrt_cast_reg_688;

assign omega_6_fu_652_p1 = omega_cast_reg_719;

assign omega_8_cast_fu_582_p1 = omega_5_fu_656_p2;

assign omega_cast_fu_369_p1 = $unsigned(omega_0_in_cast_fu_356_p1);

assign omega_fu_365_p1 = $unsigned(omega_0_in_cast_fu_356_p1);

assign p_lshr_fu_306_p4 = {{p_neg_fu_300_p2[31:1]}};

assign p_neg_fu_300_p2 = (m_reg_146 ^ 32'd4294967295);

assign p_neg_t_fu_316_p2 = (31'd0 - p_lshr_fu_306_p4);

assign p_trunc4_ext_fu_520_p1 = $signed(grp_mod_r_fu_228_ap_return);

assign p_trunc5_ext_fu_525_p1 = $signed(grp_mod_r_fu_223_ap_return);

assign p_trunc6_ext_fu_530_p1 = $signed(grp_mod_r_fu_228_ap_return);

assign p_trunc7_ext_fu_630_p1 = $signed(reg_237);

assign p_trunc8_ext_fu_635_p1 = $signed(reg_237);

assign p_trunc_ext_fu_515_p1 = $signed(grp_mod_r_fu_223_ap_return);

assign primrt_cast_fu_264_p1 = primrt_omega_table_q0;

assign primrt_omega_table_address0 = tmp_fu_254_p1;

assign primrt_omega_table_address1 = tmp_s_fu_259_p1;

assign primrt_omega_table_l_2_fu_268_p1 = primrt_omega_table_q1;

assign t1_4_cast_fu_601_p1 = $unsigned(t1_4_trunc_ext_fu_597_p1);

assign t1_4_trunc_ext_fu_597_p1 = $signed(reg_237);

assign t1_5_cast_fu_460_p1 = $unsigned(t1_5_trunc_ext_fu_456_p1);

assign t1_5_trunc_ext_fu_456_p1 = $signed(grp_mod_r_fu_223_ap_return);

assign t1_fu_663_p0 = t1_fu_663_p00;

assign t1_fu_663_p00 = reg_233;

assign t1_fu_663_p1 = t1_fu_663_p10;

assign t1_fu_663_p10 = $unsigned(omega_1_cast2_reg_824);

assign t2_cast_fu_471_p1 = $unsigned(t2_trunc_ext_fu_467_p1);

assign t2_trunc_ext_fu_467_p1 = $signed(grp_mod_r_fu_228_ap_return);

assign tmp1_fu_411_p2 = (m_reg_146 + k_reg_190);

assign tmp_100_fu_593_p1 = ap_reg_pp1_iter1_tmp_147_reg_838;

assign tmp_101_fu_609_p2 = (u1_cast_fu_605_p1 + t1_4_cast_fu_601_p1);

assign tmp_103_fu_620_p2 = (u1_cast_fu_605_p1 - t1_4_cast_fu_601_p1);

assign tmp_106_fu_389_p2 = (k_reg_190 + j_reg_169);

assign tmp_107_fu_395_p1 = $signed(tmp_106_fu_389_p2);

assign tmp_108_fu_400_p2 = (tmp_106_fu_389_p2 | 32'd1);

assign tmp_109_fu_406_p1 = $signed(tmp_108_fu_400_p2);

assign tmp_111_fu_640_p0 = tmp_111_fu_640_p00;

assign tmp_111_fu_640_p00 = a_q0;

assign tmp_111_fu_640_p1 = omega_reg_713;

assign tmp_113_fu_417_p2 = (tmp1_fu_411_p2 + j_reg_169);

assign tmp_114_fu_423_p1 = $signed(tmp_113_fu_417_p2);

assign tmp_115_fu_428_p2 = (tmp_113_fu_417_p2 | 32'd1);

assign tmp_116_fu_434_p1 = $signed(tmp_115_fu_428_p2);

assign tmp_118_fu_646_p0 = tmp_118_fu_646_p00;

assign tmp_118_fu_646_p00 = a_q1;

assign tmp_118_fu_646_p1 = omega_reg_713;

assign tmp_120_fu_475_p2 = (t1_5_cast_fu_460_p1 + u1_2_cast_fu_452_p1);

assign tmp_122_fu_486_p2 = (t2_cast_fu_471_p1 + u2_cast_fu_464_p1);

assign tmp_124_fu_497_p2 = (u1_2_cast_reg_769 - t1_5_cast_reg_774);

assign tmp_126_fu_506_p2 = (u2_cast_reg_779 - t2_cast_reg_784);

assign tmp_132_cast_fu_615_p1 = tmp_101_fu_609_p2;

assign tmp_134_cast_fu_626_p1 = $signed(tmp_103_reg_875);

assign tmp_140_fu_278_p3 = m_reg_146[32'd31];

assign tmp_141_fu_292_p3 = m_op_op4_fu_286_p2[32'd31];

assign tmp_142_fu_322_p4 = {{m_op_op4_fu_286_p2[31:1]}};

assign tmp_143_fu_332_p3 = ((tmp_141_fu_292_p3[0:0] === 1'b1) ? p_neg_t_fu_316_p2 : tmp_142_fu_322_p4);

assign tmp_144_fu_340_p3 = ((tmp_140_fu_278_p3[0:0] === 1'b1) ? 31'd0 : tmp_143_fu_332_p3);

assign tmp_145_fu_348_p3 = {{tmp_144_fu_340_p3}, {1'd0}};

assign tmp_146_fu_360_p2 = ((j_reg_169 == tmp_145_reg_704) ? 1'b1 : 1'b0);

assign tmp_147_fu_565_p2 = ap_phi_mux_j_1_phi_fu_205_p4 << 8'd1;

assign tmp_148_fu_373_p4 = {{k_reg_190[31:8]}};

assign tmp_153_cast_fu_481_p1 = tmp_120_fu_475_p2;

assign tmp_155_cast_fu_492_p1 = tmp_122_fu_486_p2;

assign tmp_157_cast_fu_501_p1 = $signed(tmp_124_fu_497_p2);

assign tmp_159_cast_fu_510_p1 = $signed(tmp_126_fu_506_p2);

assign tmp_96_fu_571_p2 = (tmp_147_fu_565_p2 | 8'd1);

assign tmp_97_fu_577_p1 = tmp_96_fu_571_p2;

assign tmp_fu_254_p1 = i_reg_158;

assign tmp_s_fu_259_p1 = i_3_fu_248_p2;

assign u1_2_cast_fu_452_p1 = reg_233;

assign u1_cast_fu_605_p1 = a_q1;

assign u2_cast_fu_464_p1 = a_load_12_reg_764;

always @ (posedge ap_clk) begin
    primrt_cast_reg_688[28:13] <= 16'b0000000000000000;
    m_2_reg_698[1:0] <= 2'b00;
    tmp_145_reg_704[0] <= 1'b0;
    omega_reg_713[31:16] <= 16'b0000000000000000;
    omega_cast_reg_719[28:16] <= 13'b0000000000000;
    a_addr_14_reg_732[0] <= 1'b1;
    a_addr_16_reg_744[0] <= 1'b1;
    u1_2_cast_reg_769[16] <= 1'b0;
    t1_5_cast_reg_774[16] <= 1'b0;
    u2_cast_reg_779[16] <= 1'b0;
    t2_cast_reg_784[16] <= 1'b0;
    tmp_147_reg_838[0] <= 1'b0;
    ap_reg_pp1_iter1_tmp_147_reg_838[0] <= 1'b0;
    a_addr_reg_843[0] <= 1'b1;
    ap_reg_pp1_iter1_a_addr_reg_843[0] <= 1'b1;
    ap_reg_pp1_iter2_a_addr_reg_843[0] <= 1'b1;
    ap_reg_pp1_iter3_a_addr_reg_843[0] <= 1'b1;
    a_addr_12_reg_864[0] <= 1'b0;
    ap_reg_pp1_iter3_a_addr_12_reg_864[0] <= 1'b0;
    m_reg_146[0] <= 1'b0;
end

endmodule //fwd_ntt2
