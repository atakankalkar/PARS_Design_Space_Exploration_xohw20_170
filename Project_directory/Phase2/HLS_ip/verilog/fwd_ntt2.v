// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_ntt2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_address1,
        a_ce1,
        a_we1,
        a_d1,
        a_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
output   a_we0;
output  [15:0] a_d0;
input  [15:0] a_q0;
output  [7:0] a_address1;
output   a_ce1;
output   a_we1;
output  [15:0] a_d1;
input  [15:0] a_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] a_address0;
reg a_ce0;
reg a_we0;
reg[15:0] a_d0;
reg[7:0] a_address1;
reg a_ce1;
reg a_we1;
reg[15:0] a_d1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] primrt_omega_table_address0;
reg    primrt_omega_table_ce0;
wire   [12:0] primrt_omega_table_q0;
wire   [2:0] primrt_omega_table_address1;
reg    primrt_omega_table_ce1;
wire   [12:0] primrt_omega_table_q1;
reg   [15:0] reg_233;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state15;
wire   [2:0] i_3_fu_243_p2;
reg   [2:0] i_3_reg_623;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_237_p2;
wire   [28:0] primrt_cast_fu_259_p1;
reg   [28:0] primrt_cast_reg_638;
wire    ap_CS_fsm_state3;
wire   [15:0] primrt_omega_table_l_2_fu_263_p1;
wire   [31:0] m_1_fu_267_p2;
reg   [31:0] m_1_reg_648;
wire   [31:0] tmp_100_fu_343_p3;
reg   [31:0] tmp_100_reg_654;
reg   [7:0] a_addr_6_reg_665;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_fu_366_p2;
reg   [7:0] a_addr_7_reg_670;
reg   [7:0] a_addr_8_reg_676;
reg   [7:0] a_addr_9_reg_682;
wire   [31:0] k_1_fu_422_p2;
reg   [31:0] k_1_reg_687;
wire   [28:0] omega_2_fu_591_p2;
reg   [28:0] omega_2_reg_692;
wire   [31:0] j_3_fu_431_p2;
reg   [31:0] j_3_reg_697;
reg   [15:0] a_load_6_reg_702;
wire   [31:0] tmp_78_fu_596_p2;
reg   [31:0] tmp_78_reg_707;
wire    ap_CS_fsm_state7;
wire   [31:0] tmp_85_fu_602_p2;
reg   [31:0] tmp_85_reg_712;
wire   [31:0] tmp_113_cast_fu_470_p1;
reg   [31:0] tmp_113_cast_reg_717;
wire    ap_CS_fsm_state9;
wire    grp_mod_r_fu_211_ap_done;
wire    grp_mod_r_fu_216_ap_done;
reg    ap_block_state9_on_subcall_done;
wire   [31:0] tmp_115_cast_fu_481_p1;
reg   [31:0] tmp_115_cast_reg_722;
wire  signed [31:0] tmp_117_cast_fu_492_p1;
reg   [31:0] tmp_117_cast_reg_727;
wire  signed [31:0] tmp_119_cast_fu_503_p1;
reg   [31:0] tmp_119_cast_reg_732;
wire   [15:0] grp_mod_r_fu_223_ap_return;
reg   [15:0] tmp_92_reg_737;
wire    ap_CS_fsm_state10;
wire    grp_mod_r_fu_223_ap_done;
wire    grp_mod_r_fu_228_ap_done;
reg    ap_block_state10_on_subcall_done;
wire   [15:0] grp_mod_r_fu_228_ap_return;
reg   [15:0] tmp_94_reg_742;
wire   [31:0] omega_4_cast_fu_508_p1;
reg   [31:0] omega_4_cast_reg_747;
wire    ap_CS_fsm_state12;
wire   [15:0] grp_mod_r_fu_211_ap_return;
wire    ap_CS_fsm_state13;
wire   [7:0] j_2_fu_518_p2;
reg   [7:0] j_2_reg_760;
wire    ap_CS_fsm_state14;
wire   [7:0] tmp_102_fu_524_p2;
reg   [7:0] tmp_102_reg_765;
wire   [0:0] exitcond_fu_512_p2;
reg   [7:0] a_addr_reg_770;
wire   [31:0] t1_fu_608_p2;
reg   [31:0] t1_reg_776;
wire    ap_CS_fsm_state16;
wire   [29:0] omega_fu_614_p2;
reg   [29:0] omega_reg_781;
reg   [7:0] a_addr_5_reg_786;
wire    ap_CS_fsm_state17;
wire   [31:0] omega_2_cast_fu_557_p1;
reg   [31:0] omega_2_cast_reg_792;
wire   [31:0] tmp_92_cast_fu_575_p1;
reg   [31:0] tmp_92_cast_reg_797;
wire    ap_CS_fsm_state18;
reg    ap_block_state18_on_subcall_done;
wire  signed [31:0] tmp_94_cast_fu_586_p1;
reg  signed [31:0] tmp_94_cast_reg_802;
wire   [15:0] grp_mod_r_fu_216_ap_return;
reg   [15:0] tmp_71_reg_807;
wire    grp_mod_r_fu_211_ap_start;
wire    grp_mod_r_fu_211_ap_idle;
wire    grp_mod_r_fu_211_ap_ready;
reg   [31:0] grp_mod_r_fu_211_x;
wire    grp_mod_r_fu_216_ap_start;
wire    grp_mod_r_fu_216_ap_idle;
wire    grp_mod_r_fu_216_ap_ready;
reg   [31:0] grp_mod_r_fu_216_x;
wire    grp_mod_r_fu_223_ap_start;
wire    grp_mod_r_fu_223_ap_idle;
wire    grp_mod_r_fu_223_ap_ready;
wire    grp_mod_r_fu_228_ap_start;
wire    grp_mod_r_fu_228_ap_idle;
wire    grp_mod_r_fu_228_ap_ready;
reg   [31:0] m_reg_132;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_101_fu_351_p2;
reg   [2:0] i_reg_144;
reg   [31:0] j_reg_155;
reg   [15:0] omega_0_in_reg_167;
reg   [31:0] k_reg_177;
wire    ap_CS_fsm_state11;
reg   [7:0] j_1_reg_188;
wire    ap_CS_fsm_state19;
reg    ap_block_state19_on_subcall_done;
reg   [15:0] omega_1_reg_199;
reg    ap_reg_grp_mod_r_fu_211_ap_start;
wire    ap_CS_fsm_state8;
reg    ap_reg_grp_mod_r_fu_216_ap_start;
reg    ap_reg_grp_mod_r_fu_223_ap_start;
reg    ap_reg_grp_mod_r_fu_228_ap_start;
wire   [63:0] tmp_fu_249_p1;
wire   [63:0] tmp_s_fu_254_p1;
wire  signed [63:0] tmp_73_fu_378_p1;
wire  signed [63:0] tmp_76_fu_389_p1;
wire  signed [63:0] tmp_81_fu_406_p1;
wire  signed [63:0] tmp_83_fu_417_p1;
wire   [63:0] tmp_61_fu_536_p1;
wire   [63:0] tmp_66_fu_553_p1;
wire   [31:0] m_op_op7_fu_281_p2;
wire   [31:0] p_neg_fu_295_p2;
wire   [30:0] p_lshr_fu_301_p4;
wire   [0:0] tmp_63_fu_287_p3;
wire   [30:0] p_neg_t_fu_311_p2;
wire   [30:0] tmp_74_fu_317_p4;
wire   [0:0] tmp_62_fu_273_p3;
wire   [30:0] tmp_98_fu_327_p3;
wire   [30:0] tmp_99_fu_335_p3;
wire   [23:0] tmp_103_fu_356_p4;
wire   [31:0] tmp_72_fu_372_p2;
wire   [31:0] tmp_75_fu_383_p2;
wire   [31:0] tmp1_fu_394_p2;
wire   [31:0] tmp_80_fu_400_p2;
wire   [31:0] tmp_82_fu_411_p2;
wire   [16:0] t1_2_cast_fu_452_p1;
wire   [16:0] u1_1_cast_fu_448_p1;
wire   [16:0] tmp_87_fu_464_p2;
wire   [16:0] t2_cast_fu_460_p1;
wire   [16:0] u2_cast_fu_456_p1;
wire   [16:0] tmp_89_fu_475_p2;
wire   [16:0] tmp_91_fu_486_p2;
wire   [16:0] tmp_93_fu_497_p2;
wire   [7:0] tmp_60_fu_530_p2;
wire   [16:0] t1_1_cast_fu_561_p1;
wire   [16:0] u1_cast_fu_565_p1;
wire   [16:0] tmp_67_fu_569_p2;
wire   [16:0] tmp_69_fu_580_p2;
wire   [15:0] omega_2_fu_591_p0;
wire   [12:0] omega_2_fu_591_p1;
wire   [15:0] tmp_78_fu_596_p0;
wire   [15:0] tmp_78_fu_596_p1;
wire   [31:0] omega2_fu_441_p1;
wire   [15:0] tmp_85_fu_602_p0;
wire   [15:0] tmp_85_fu_602_p1;
wire   [15:0] t1_fu_608_p0;
wire   [15:0] t1_fu_608_p1;
wire   [13:0] omega_fu_614_p0;
wire   [15:0] omega_fu_614_p1;
reg   [18:0] ap_NS_fsm;
wire   [28:0] omega_2_fu_591_p00;
wire   [29:0] omega_fu_614_p10;
wire   [31:0] t1_fu_608_p00;
wire   [31:0] t1_fu_608_p10;
wire   [31:0] tmp_78_fu_596_p00;
wire   [31:0] tmp_85_fu_602_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_reg_grp_mod_r_fu_211_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_216_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_223_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_228_ap_start = 1'b0;
end

fwd_ntt2_primrt_ohbi #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
primrt_omega_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(primrt_omega_table_address0),
    .ce0(primrt_omega_table_ce0),
    .q0(primrt_omega_table_q0),
    .address1(primrt_omega_table_address1),
    .ce1(primrt_omega_table_ce1),
    .q1(primrt_omega_table_q1)
);

mod_r grp_mod_r_fu_211(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_211_ap_start),
    .ap_done(grp_mod_r_fu_211_ap_done),
    .ap_idle(grp_mod_r_fu_211_ap_idle),
    .ap_ready(grp_mod_r_fu_211_ap_ready),
    .x(grp_mod_r_fu_211_x),
    .ap_return(grp_mod_r_fu_211_ap_return)
);

mod_r grp_mod_r_fu_216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_216_ap_start),
    .ap_done(grp_mod_r_fu_216_ap_done),
    .ap_idle(grp_mod_r_fu_216_ap_idle),
    .ap_ready(grp_mod_r_fu_216_ap_ready),
    .x(grp_mod_r_fu_216_x),
    .ap_return(grp_mod_r_fu_216_ap_return)
);

mod_r grp_mod_r_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_223_ap_start),
    .ap_done(grp_mod_r_fu_223_ap_done),
    .ap_idle(grp_mod_r_fu_223_ap_idle),
    .ap_ready(grp_mod_r_fu_223_ap_ready),
    .x(tmp_117_cast_reg_727),
    .ap_return(grp_mod_r_fu_223_ap_return)
);

mod_r grp_mod_r_fu_228(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_228_ap_start),
    .ap_done(grp_mod_r_fu_228_ap_done),
    .ap_idle(grp_mod_r_fu_228_ap_idle),
    .ap_ready(grp_mod_r_fu_228_ap_ready),
    .x(tmp_119_cast_reg_732),
    .ap_return(grp_mod_r_fu_228_ap_return)
);

RLWE_enc2_mul_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
RLWE_enc2_mul_mulibs_U19(
    .din0(omega_2_fu_591_p0),
    .din1(omega_2_fu_591_p1),
    .dout(omega_2_fu_591_p2)
);

RLWE_enc2_mul_muljbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_muljbC_U20(
    .din0(tmp_78_fu_596_p0),
    .din1(tmp_78_fu_596_p1),
    .dout(tmp_78_fu_596_p2)
);

RLWE_enc2_mul_muljbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_muljbC_U21(
    .din0(tmp_85_fu_602_p0),
    .din1(tmp_85_fu_602_p1),
    .dout(tmp_85_fu_602_p2)
);

RLWE_enc2_mul_muljbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_muljbC_U22(
    .din0(t1_fu_608_p0),
    .din1(t1_fu_608_p1),
    .dout(t1_fu_608_p2)
);

RLWE_enc2_mul_mulkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
RLWE_enc2_mul_mulkbM_U23(
    .din0(omega_fu_614_p0),
    .din1(omega_fu_614_p1),
    .dout(omega_fu_614_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_211_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)))) begin
            ap_reg_grp_mod_r_fu_211_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_211_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_211_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_216_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)))) begin
            ap_reg_grp_mod_r_fu_216_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_216_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_216_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_223_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
            ap_reg_grp_mod_r_fu_223_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_223_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_223_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_228_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
            ap_reg_grp_mod_r_fu_228_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_228_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_228_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_101_fu_351_p2 == 1'd1))) begin
        i_reg_144 <= i_3_reg_623;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_144 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_188 <= 8'd0;
    end else if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        j_1_reg_188 <= j_2_reg_760;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_mod_r_fu_211_ap_done == 1'b1))) begin
        j_reg_155 <= j_3_reg_697;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_155 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_101_fu_351_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        k_reg_177 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_reg_177 <= k_1_reg_687;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_101_fu_351_p2 == 1'd1))) begin
                m_reg_132[31 : 1] <= m_1_reg_648[31 : 1];
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                m_reg_132[1] <= 1'b1;
        m_reg_132[2] <= 1'b0;
        m_reg_132[3] <= 1'b0;
        m_reg_132[4] <= 1'b0;
        m_reg_132[5] <= 1'b0;
        m_reg_132[6] <= 1'b0;
        m_reg_132[7] <= 1'b0;
        m_reg_132[8] <= 1'b0;
        m_reg_132[9] <= 1'b0;
        m_reg_132[10] <= 1'b0;
        m_reg_132[11] <= 1'b0;
        m_reg_132[12] <= 1'b0;
        m_reg_132[13] <= 1'b0;
        m_reg_132[14] <= 1'b0;
        m_reg_132[15] <= 1'b0;
        m_reg_132[16] <= 1'b0;
        m_reg_132[17] <= 1'b0;
        m_reg_132[18] <= 1'b0;
        m_reg_132[19] <= 1'b0;
        m_reg_132[20] <= 1'b0;
        m_reg_132[21] <= 1'b0;
        m_reg_132[22] <= 1'b0;
        m_reg_132[23] <= 1'b0;
        m_reg_132[24] <= 1'b0;
        m_reg_132[25] <= 1'b0;
        m_reg_132[26] <= 1'b0;
        m_reg_132[27] <= 1'b0;
        m_reg_132[28] <= 1'b0;
        m_reg_132[29] <= 1'b0;
        m_reg_132[30] <= 1'b0;
        m_reg_132[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_mod_r_fu_211_ap_done == 1'b1))) begin
        omega_0_in_reg_167 <= grp_mod_r_fu_211_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        omega_0_in_reg_167 <= primrt_omega_table_l_2_fu_263_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        omega_1_reg_199 <= 16'd1065;
    end else if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        omega_1_reg_199 <= tmp_71_reg_807;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        a_addr_5_reg_786[7 : 1] <= tmp_66_fu_553_p1[7 : 1];
        omega_2_cast_reg_792[29 : 0] <= omega_2_cast_fu_557_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_fu_366_p2 == 1'd1))) begin
        a_addr_6_reg_665 <= tmp_73_fu_378_p1;
        a_addr_7_reg_670[7 : 1] <= tmp_76_fu_389_p1[7 : 1];
        a_addr_8_reg_676 <= tmp_81_fu_406_p1;
        a_addr_9_reg_682[7 : 1] <= tmp_83_fu_417_p1[7 : 1];
        k_1_reg_687 <= k_1_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        a_addr_reg_770[7 : 1] <= tmp_61_fu_536_p1[7 : 1];
        tmp_102_reg_765[7 : 1] <= tmp_102_fu_524_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_load_6_reg_702 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_623 <= i_3_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_2_reg_760 <= j_2_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_3_reg_697 <= j_3_fu_431_p2;
        omega_2_reg_692 <= omega_2_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m_1_reg_648[31 : 2] <= m_1_fu_267_p2[31 : 2];
        primrt_cast_reg_638[12 : 0] <= primrt_cast_fu_259_p1[12 : 0];
        tmp_100_reg_654[31 : 1] <= tmp_100_fu_343_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        omega_4_cast_reg_747[28 : 0] <= omega_4_cast_fu_508_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        omega_reg_781 <= omega_fu_614_p2;
        t1_reg_776 <= t1_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_233 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
        tmp_113_cast_reg_717[16 : 0] <= tmp_113_cast_fu_470_p1[16 : 0];
        tmp_115_cast_reg_722[16 : 0] <= tmp_115_cast_fu_481_p1[16 : 0];
        tmp_117_cast_reg_727 <= tmp_117_cast_fu_492_p1;
        tmp_119_cast_reg_732 <= tmp_119_cast_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
        tmp_71_reg_807 <= grp_mod_r_fu_216_ap_return;
        tmp_92_cast_reg_797[16 : 0] <= tmp_92_cast_fu_575_p1[16 : 0];
        tmp_94_cast_reg_802 <= tmp_94_cast_fu_586_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_78_reg_707 <= tmp_78_fu_596_p2;
        tmp_85_reg_712 <= tmp_85_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        tmp_92_reg_737 <= grp_mod_r_fu_223_ap_return;
        tmp_94_reg_742 <= grp_mod_r_fu_228_ap_return;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_address0 = a_addr_5_reg_786;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_address0 = tmp_61_fu_536_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        a_address0 = a_addr_8_reg_676;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        a_address0 = a_addr_6_reg_665;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = tmp_76_fu_389_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        a_address1 = a_addr_reg_770;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_address1 = tmp_66_fu_553_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        a_address1 = a_addr_9_reg_682;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address1 = a_addr_7_reg_670;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_address1 = a_addr_8_reg_676;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = tmp_83_fu_417_p1;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        a_d0 = tmp_92_reg_737;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        a_d0 = grp_mod_r_fu_211_ap_return;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        a_d1 = tmp_94_reg_742;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        a_d1 = grp_mod_r_fu_216_ap_return;
    end else begin
        a_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done)))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done)))) begin
        a_we1 = 1'b1;
    end else begin
        a_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_512_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_512_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_mod_r_fu_211_x = tmp_92_cast_reg_797;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_mod_r_fu_211_x = t1_reg_776;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_mod_r_fu_211_x = omega_4_cast_reg_747;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mod_r_fu_211_x = tmp_113_cast_reg_717;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mod_r_fu_211_x = tmp_78_reg_707;
    end else begin
        grp_mod_r_fu_211_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_mod_r_fu_216_x = tmp_94_cast_reg_802;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_mod_r_fu_216_x = omega_2_cast_reg_792;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mod_r_fu_216_x = tmp_115_cast_reg_722;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mod_r_fu_216_x = tmp_85_reg_712;
    end else begin
        grp_mod_r_fu_216_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce0 = 1'b1;
    end else begin
        primrt_omega_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce1 = 1'b1;
    end else begin
        primrt_omega_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_101_fu_351_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_mod_r_fu_211_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_512_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_mod_r_fu_228_ap_done == 1'b0) | (grp_mod_r_fu_223_ap_done == 1'b0) | (grp_mod_r_fu_216_ap_done == 1'b0) | (grp_mod_r_fu_211_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state18_on_subcall_done = ((grp_mod_r_fu_216_ap_done == 1'b0) | (grp_mod_r_fu_211_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state19_on_subcall_done = ((grp_mod_r_fu_216_ap_done == 1'b0) | (grp_mod_r_fu_211_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_mod_r_fu_216_ap_done == 1'b0) | (grp_mod_r_fu_211_ap_done == 1'b0));
end

assign exitcond1_fu_237_p2 = ((i_reg_144 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond_fu_512_p2 = ((j_1_reg_188 == 8'd128) ? 1'b1 : 1'b0);

assign grp_mod_r_fu_211_ap_start = ap_reg_grp_mod_r_fu_211_ap_start;

assign grp_mod_r_fu_216_ap_start = ap_reg_grp_mod_r_fu_216_ap_start;

assign grp_mod_r_fu_223_ap_start = ap_reg_grp_mod_r_fu_223_ap_start;

assign grp_mod_r_fu_228_ap_start = ap_reg_grp_mod_r_fu_228_ap_start;

assign i_3_fu_243_p2 = (i_reg_144 + 3'd1);

assign icmp_fu_366_p2 = (($signed(tmp_103_fu_356_p4) < $signed(24'd1)) ? 1'b1 : 1'b0);

assign j_2_fu_518_p2 = (j_1_reg_188 + 8'd1);

assign j_3_fu_431_p2 = (j_reg_155 + 32'd2);

assign k_1_fu_422_p2 = (m_1_reg_648 + k_reg_177);

assign m_1_fu_267_p2 = m_reg_132 << 32'd1;

assign m_op_op7_fu_281_p2 = (m_reg_132 | 32'd1);

assign omega2_fu_441_p1 = omega_0_in_reg_167;

assign omega_2_cast_fu_557_p1 = omega_reg_781;

assign omega_2_fu_591_p0 = omega_2_fu_591_p00;

assign omega_2_fu_591_p00 = omega_0_in_reg_167;

assign omega_2_fu_591_p1 = primrt_cast_reg_638;

assign omega_4_cast_fu_508_p1 = omega_2_reg_692;

assign omega_fu_614_p0 = 30'd5118;

assign omega_fu_614_p1 = omega_fu_614_p10;

assign omega_fu_614_p10 = omega_1_reg_199;

assign p_lshr_fu_301_p4 = {{p_neg_fu_295_p2[31:1]}};

assign p_neg_fu_295_p2 = (m_reg_132 ^ 32'd4294967295);

assign p_neg_t_fu_311_p2 = (31'd0 - p_lshr_fu_301_p4);

assign primrt_cast_fu_259_p1 = primrt_omega_table_q0;

assign primrt_omega_table_address0 = tmp_fu_249_p1;

assign primrt_omega_table_address1 = tmp_s_fu_254_p1;

assign primrt_omega_table_l_2_fu_263_p1 = primrt_omega_table_q1;

assign t1_1_cast_fu_561_p1 = grp_mod_r_fu_211_ap_return;

assign t1_2_cast_fu_452_p1 = grp_mod_r_fu_211_ap_return;

assign t1_fu_608_p0 = t1_fu_608_p00;

assign t1_fu_608_p00 = omega_1_reg_199;

assign t1_fu_608_p1 = t1_fu_608_p10;

assign t1_fu_608_p10 = reg_233;

assign t2_cast_fu_460_p1 = grp_mod_r_fu_216_ap_return;

assign tmp1_fu_394_p2 = (m_reg_132 + k_reg_177);

assign tmp_100_fu_343_p3 = {{tmp_99_fu_335_p3}, {1'd0}};

assign tmp_101_fu_351_p2 = ((j_reg_155 == tmp_100_reg_654) ? 1'b1 : 1'b0);

assign tmp_102_fu_524_p2 = j_1_reg_188 << 8'd1;

assign tmp_103_fu_356_p4 = {{k_reg_177[31:8]}};

assign tmp_113_cast_fu_470_p1 = tmp_87_fu_464_p2;

assign tmp_115_cast_fu_481_p1 = tmp_89_fu_475_p2;

assign tmp_117_cast_fu_492_p1 = $signed(tmp_91_fu_486_p2);

assign tmp_119_cast_fu_503_p1 = $signed(tmp_93_fu_497_p2);

assign tmp_60_fu_530_p2 = (tmp_102_fu_524_p2 | 8'd1);

assign tmp_61_fu_536_p1 = tmp_60_fu_530_p2;

assign tmp_62_fu_273_p3 = m_reg_132[32'd31];

assign tmp_63_fu_287_p3 = m_op_op7_fu_281_p2[32'd31];

assign tmp_66_fu_553_p1 = tmp_102_reg_765;

assign tmp_67_fu_569_p2 = (t1_1_cast_fu_561_p1 + u1_cast_fu_565_p1);

assign tmp_69_fu_580_p2 = (u1_cast_fu_565_p1 - t1_1_cast_fu_561_p1);

assign tmp_72_fu_372_p2 = (k_reg_177 + j_reg_155);

assign tmp_73_fu_378_p1 = $signed(tmp_72_fu_372_p2);

assign tmp_74_fu_317_p4 = {{m_op_op7_fu_281_p2[31:1]}};

assign tmp_75_fu_383_p2 = (tmp_72_fu_372_p2 | 32'd1);

assign tmp_76_fu_389_p1 = $signed(tmp_75_fu_383_p2);

assign tmp_78_fu_596_p0 = tmp_78_fu_596_p00;

assign tmp_78_fu_596_p00 = reg_233;

assign tmp_78_fu_596_p1 = omega2_fu_441_p1;

assign tmp_80_fu_400_p2 = (tmp1_fu_394_p2 + j_reg_155);

assign tmp_81_fu_406_p1 = $signed(tmp_80_fu_400_p2);

assign tmp_82_fu_411_p2 = (tmp_80_fu_400_p2 | 32'd1);

assign tmp_83_fu_417_p1 = $signed(tmp_82_fu_411_p2);

assign tmp_85_fu_602_p0 = tmp_85_fu_602_p00;

assign tmp_85_fu_602_p00 = a_load_6_reg_702;

assign tmp_85_fu_602_p1 = omega2_fu_441_p1;

assign tmp_87_fu_464_p2 = (t1_2_cast_fu_452_p1 + u1_1_cast_fu_448_p1);

assign tmp_89_fu_475_p2 = (t2_cast_fu_460_p1 + u2_cast_fu_456_p1);

assign tmp_91_fu_486_p2 = (u1_1_cast_fu_448_p1 - t1_2_cast_fu_452_p1);

assign tmp_92_cast_fu_575_p1 = tmp_67_fu_569_p2;

assign tmp_93_fu_497_p2 = (u2_cast_fu_456_p1 - t2_cast_fu_460_p1);

assign tmp_94_cast_fu_586_p1 = $signed(tmp_69_fu_580_p2);

assign tmp_98_fu_327_p3 = ((tmp_63_fu_287_p3[0:0] === 1'b1) ? p_neg_t_fu_311_p2 : tmp_74_fu_317_p4);

assign tmp_99_fu_335_p3 = ((tmp_62_fu_273_p3[0:0] === 1'b1) ? 31'd0 : tmp_98_fu_327_p3);

assign tmp_fu_249_p1 = i_reg_144;

assign tmp_s_fu_254_p1 = i_3_fu_243_p2;

assign u1_1_cast_fu_448_p1 = a_q0;

assign u1_cast_fu_565_p1 = a_q1;

assign u2_cast_fu_456_p1 = a_q1;

always @ (posedge ap_clk) begin
    primrt_cast_reg_638[28:13] <= 16'b0000000000000000;
    m_1_reg_648[1:0] <= 2'b00;
    tmp_100_reg_654[0] <= 1'b0;
    a_addr_7_reg_670[0] <= 1'b1;
    a_addr_9_reg_682[0] <= 1'b1;
    tmp_113_cast_reg_717[31:17] <= 15'b000000000000000;
    tmp_115_cast_reg_722[31:17] <= 15'b000000000000000;
    omega_4_cast_reg_747[31:29] <= 3'b000;
    tmp_102_reg_765[0] <= 1'b0;
    a_addr_reg_770[0] <= 1'b1;
    a_addr_5_reg_786[0] <= 1'b0;
    omega_2_cast_reg_792[31:30] <= 2'b00;
    tmp_92_cast_reg_797[31:17] <= 15'b000000000000000;
    m_reg_132[0] <= 1'b0;
end

endmodule //fwd_ntt2
