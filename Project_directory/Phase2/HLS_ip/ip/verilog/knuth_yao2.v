// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module knuth_yao2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
output   a_we0;
output  [15:0] a_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] a_address0;
reg a_ce0;
reg a_we0;
reg[15:0] a_d0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] lfsr32;
reg   [31:0] lfsr31;
wire   [31:0] rnd_1_fu_236_p2;
wire   [7:0] i_2_fu_248_p2;
reg   [7:0] i_2_reg_293;
wire    ap_CS_fsm_state2;
reg   [31:0] rnd_2_reg_298;
wire    ap_CS_fsm_state3;
wire    grp_knuth_yao_single_num_fu_86_ap_done;
wire   [7:0] tmp_56_fu_259_p2;
reg   [7:0] tmp_56_reg_303;
wire    ap_CS_fsm_state5;
wire    grp_knuth_yao_single_num_fu_86_ap_start;
wire    grp_knuth_yao_single_num_fu_86_ap_idle;
wire    grp_knuth_yao_single_num_fu_86_ap_ready;
reg   [31:0] grp_knuth_yao_single_num_fu_86_rnd_read;
wire   [31:0] grp_knuth_yao_single_num_fu_86_lfsr32_o;
wire    grp_knuth_yao_single_num_fu_86_lfsr32_o_ap_vld;
wire   [31:0] grp_knuth_yao_single_num_fu_86_lfsr31_o;
wire    grp_knuth_yao_single_num_fu_86_lfsr31_o_ap_vld;
wire   [31:0] grp_knuth_yao_single_num_fu_86_ap_return_0;
wire   [31:0] grp_knuth_yao_single_num_fu_86_ap_return_1;
reg   [31:0] rnd1_reg_64;
reg   [7:0] i_reg_74;
reg    ap_reg_grp_knuth_yao_single_num_fu_86_ap_start;
wire   [0:0] exitcond_fu_242_p2;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_s_fu_265_p1;
wire   [63:0] tmp_59_fu_280_p1;
wire   [31:0] lfsr_write_assign_fu_176_p2;
wire   [31:0] lfsr_write_assign_1_s_fu_220_p1;
wire   [15:0] tmp_55_fu_254_p1;
wire   [15:0] tmp_57_fu_270_p1;
wire   [30:0] tmp_i_i_i_fu_118_p4;
wire   [0:0] feedback_fu_114_p1;
wire   [31:0] tmp_2_i_i_i_fu_132_p3;
wire   [31:0] tmp_fu_128_p1;
wire   [31:0] lfsr_write_assign_3_fu_148_p2;
wire   [30:0] tmp_i8_i_i_fu_154_p4;
wire   [0:0] feedback_1_fu_140_p3;
wire   [31:0] tmp_2_i10_i_i_fu_168_p3;
wire   [31:0] tmp_17_fu_164_p1;
wire   [0:0] feedback_2_fu_192_p1;
wire   [30:0] tmp_2_i17_i_i_cast_c_fu_206_p3;
wire   [30:0] tmp_i15_i_i_cast_fu_196_p4;
wire   [30:0] lfsr_write_assign_1_fu_214_p2;
wire   [31:0] rnd_fu_230_p2;
wire   [7:0] tmp_58_fu_275_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 lfsr32 = 32'd703710;
#0 lfsr31 = 32'd591751049;
#0 ap_reg_grp_knuth_yao_single_num_fu_86_ap_start = 1'b0;
end

knuth_yao_single_num grp_knuth_yao_single_num_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_knuth_yao_single_num_fu_86_ap_start),
    .ap_done(grp_knuth_yao_single_num_fu_86_ap_done),
    .ap_idle(grp_knuth_yao_single_num_fu_86_ap_idle),
    .ap_ready(grp_knuth_yao_single_num_fu_86_ap_ready),
    .rnd_read(grp_knuth_yao_single_num_fu_86_rnd_read),
    .lfsr32_i(lfsr32),
    .lfsr32_o(grp_knuth_yao_single_num_fu_86_lfsr32_o),
    .lfsr32_o_ap_vld(grp_knuth_yao_single_num_fu_86_lfsr32_o_ap_vld),
    .lfsr31_i(lfsr31),
    .lfsr31_o(grp_knuth_yao_single_num_fu_86_lfsr31_o),
    .lfsr31_o_ap_vld(grp_knuth_yao_single_num_fu_86_lfsr31_o_ap_vld),
    .ap_return_0(grp_knuth_yao_single_num_fu_86_ap_return_0),
    .ap_return_1(grp_knuth_yao_single_num_fu_86_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_knuth_yao_single_num_fu_86_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) | ((exitcond_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_reg_grp_knuth_yao_single_num_fu_86_ap_start <= 1'b1;
        end else if ((grp_knuth_yao_single_num_fu_86_ap_ready == 1'b1)) begin
            ap_reg_grp_knuth_yao_single_num_fu_86_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_reg_74 <= i_2_reg_293;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_74 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        lfsr31 <= lfsr_write_assign_1_s_fu_220_p1;
    end else if ((((grp_knuth_yao_single_num_fu_86_lfsr31_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_knuth_yao_single_num_fu_86_lfsr31_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        lfsr31 <= grp_knuth_yao_single_num_fu_86_lfsr31_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        lfsr32 <= lfsr_write_assign_fu_176_p2;
    end else if ((((grp_knuth_yao_single_num_fu_86_lfsr32_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_knuth_yao_single_num_fu_86_lfsr32_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        lfsr32 <= grp_knuth_yao_single_num_fu_86_lfsr32_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        rnd1_reg_64 <= grp_knuth_yao_single_num_fu_86_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        rnd1_reg_64 <= rnd_1_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_293 <= i_2_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        rnd_2_reg_298 <= grp_knuth_yao_single_num_fu_86_ap_return_1;
        tmp_56_reg_303[7 : 1] <= tmp_56_fu_259_p2[7 : 1];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = tmp_59_fu_280_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = tmp_s_fu_265_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_d0 = tmp_57_fu_270_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_d0 = tmp_55_fu_254_p1;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_knuth_yao_single_num_fu_86_rnd_read = rnd_2_reg_298;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_knuth_yao_single_num_fu_86_rnd_read = rnd1_reg_64;
    end else begin
        grp_knuth_yao_single_num_fu_86_rnd_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_knuth_yao_single_num_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign exitcond_fu_242_p2 = ((i_reg_74 == 8'd128) ? 1'b1 : 1'b0);

assign feedback_1_fu_140_p3 = lfsr32[32'd1];

assign feedback_2_fu_192_p1 = lfsr31[0:0];

assign feedback_fu_114_p1 = lfsr32[0:0];

assign grp_knuth_yao_single_num_fu_86_ap_start = ap_reg_grp_knuth_yao_single_num_fu_86_ap_start;

assign i_2_fu_248_p2 = (i_reg_74 + 8'd1);

assign lfsr_write_assign_1_fu_214_p2 = (tmp_i15_i_i_cast_fu_196_p4 ^ tmp_2_i17_i_i_cast_c_fu_206_p3);

assign lfsr_write_assign_1_s_fu_220_p1 = lfsr_write_assign_1_fu_214_p2;

assign lfsr_write_assign_3_fu_148_p2 = (tmp_fu_128_p1 ^ tmp_2_i_i_i_fu_132_p3);

assign lfsr_write_assign_fu_176_p2 = (tmp_2_i10_i_i_fu_168_p3 ^ tmp_17_fu_164_p1);

assign rnd_1_fu_236_p2 = (rnd_fu_230_p2 | 32'd2147483648);

assign rnd_fu_230_p2 = (lfsr_write_assign_fu_176_p2 ^ lfsr_write_assign_1_s_fu_220_p1);

assign tmp_17_fu_164_p1 = tmp_i8_i_i_fu_154_p4;

assign tmp_2_i10_i_i_fu_168_p3 = ((feedback_1_fu_140_p3[0:0] === 1'b1) ? 32'd3032273756 : 32'd0);

assign tmp_2_i17_i_i_cast_c_fu_206_p3 = ((feedback_2_fu_192_p1[0:0] === 1'b1) ? 31'd2052834019 : 31'd0);

assign tmp_2_i_i_i_fu_132_p3 = ((feedback_fu_114_p1[0:0] === 1'b1) ? 32'd3032273756 : 32'd0);

assign tmp_55_fu_254_p1 = grp_knuth_yao_single_num_fu_86_ap_return_0[15:0];

assign tmp_56_fu_259_p2 = i_reg_74 << 8'd1;

assign tmp_57_fu_270_p1 = grp_knuth_yao_single_num_fu_86_ap_return_0[15:0];

assign tmp_58_fu_275_p2 = (tmp_56_reg_303 | 8'd1);

assign tmp_59_fu_280_p1 = tmp_58_fu_275_p2;

assign tmp_fu_128_p1 = tmp_i_i_i_fu_118_p4;

assign tmp_i15_i_i_cast_fu_196_p4 = {{lfsr31[31:1]}};

assign tmp_i8_i_i_fu_154_p4 = {{lfsr_write_assign_3_fu_148_p2[31:1]}};

assign tmp_i_i_i_fu_118_p4 = {{lfsr32[31:1]}};

assign tmp_s_fu_265_p1 = tmp_56_fu_259_p2;

always @ (posedge ap_clk) begin
    tmp_56_reg_303[0] <= 1'b0;
end

endmodule //knuth_yao2
