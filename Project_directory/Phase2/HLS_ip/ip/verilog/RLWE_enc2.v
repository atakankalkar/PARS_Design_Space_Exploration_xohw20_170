// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="RLWE_enc2,hls_ip_2017_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=17,HLS_SYN_DSP=7,HLS_SYN_FF=8149,HLS_SYN_LUT=10467}" *)

module RLWE_enc2 (
        ap_clk,
        ap_rst_n,
        s_axi_S_AXI_BUNDLE_AWVALID,
        s_axi_S_AXI_BUNDLE_AWREADY,
        s_axi_S_AXI_BUNDLE_AWADDR,
        s_axi_S_AXI_BUNDLE_WVALID,
        s_axi_S_AXI_BUNDLE_WREADY,
        s_axi_S_AXI_BUNDLE_WDATA,
        s_axi_S_AXI_BUNDLE_WSTRB,
        s_axi_S_AXI_BUNDLE_ARVALID,
        s_axi_S_AXI_BUNDLE_ARREADY,
        s_axi_S_AXI_BUNDLE_ARADDR,
        s_axi_S_AXI_BUNDLE_RVALID,
        s_axi_S_AXI_BUNDLE_RREADY,
        s_axi_S_AXI_BUNDLE_RDATA,
        s_axi_S_AXI_BUNDLE_RRESP,
        s_axi_S_AXI_BUNDLE_BVALID,
        s_axi_S_AXI_BUNDLE_BREADY,
        s_axi_S_AXI_BUNDLE_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;
parameter    C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH = 32;
parameter    C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH = 12;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_S_AXI_BUNDLE_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_S_AXI_BUNDLE_AWVALID;
output   s_axi_S_AXI_BUNDLE_AWREADY;
input  [C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_AWADDR;
input   s_axi_S_AXI_BUNDLE_WVALID;
output   s_axi_S_AXI_BUNDLE_WREADY;
input  [C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_WDATA;
input  [C_S_AXI_S_AXI_BUNDLE_WSTRB_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_WSTRB;
input   s_axi_S_AXI_BUNDLE_ARVALID;
output   s_axi_S_AXI_BUNDLE_ARREADY;
input  [C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_ARADDR;
output   s_axi_S_AXI_BUNDLE_RVALID;
input   s_axi_S_AXI_BUNDLE_RREADY;
output  [C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_S_AXI_BUNDLE_RDATA;
output  [1:0] s_axi_S_AXI_BUNDLE_RRESP;
output   s_axi_S_AXI_BUNDLE_BVALID;
input   s_axi_S_AXI_BUNDLE_BREADY;
output  [1:0] s_axi_S_AXI_BUNDLE_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg    a_ce0;
wire   [15:0] a_q0;
reg   [7:0] c1_address0;
reg    c1_ce0;
reg    c1_we0;
reg   [15:0] c1_d0;
wire   [15:0] c1_q0;
reg   [7:0] c2_address0;
reg    c2_ce0;
reg    c2_we0;
reg   [15:0] c2_d0;
wire   [15:0] c2_q0;
wire   [7:0] m_address0;
reg    m_ce0;
wire   [15:0] m_q0;
reg    p_ce0;
wire   [15:0] p_q0;
wire   [8:0] i_5_fu_209_p2;
reg   [8:0] i_5_reg_284;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_fu_215_p1;
reg   [63:0] tmp_reg_289;
wire   [0:0] exitcond_fu_203_p2;
wire   [8:0] j_fu_245_p2;
reg   [8:0] j_reg_302;
wire    ap_CS_fsm_state9;
reg   [7:0] e3_addr_reg_307;
wire   [0:0] exitcond_i_fu_239_p2;
wire   [16:0] a_1_fu_265_p2;
reg   [16:0] a_1_reg_317;
wire    ap_CS_fsm_state10;
reg   [7:0] e1_address0;
reg    e1_ce0;
reg    e1_we0;
reg   [15:0] e1_d0;
wire   [15:0] e1_q0;
reg    e1_ce1;
reg    e1_we1;
wire   [15:0] e1_q1;
reg   [7:0] e2_address0;
reg    e2_ce0;
reg    e2_we0;
reg   [15:0] e2_d0;
wire   [15:0] e2_q0;
reg    e2_ce1;
reg    e2_we1;
wire   [15:0] e2_q1;
reg   [7:0] e3_address0;
reg    e3_ce0;
reg    e3_we0;
reg   [15:0] e3_d0;
wire   [15:0] e3_q0;
reg    e3_ce1;
reg    e3_we1;
wire   [15:0] e3_q1;
reg   [7:0] encoded_m_address0;
reg    encoded_m_ce0;
reg    encoded_m_we0;
wire   [15:0] encoded_m_d0;
wire   [15:0] encoded_m_q0;
wire    grp_fwd_ntt2_fu_155_ap_start;
wire    grp_fwd_ntt2_fu_155_ap_done;
wire    grp_fwd_ntt2_fu_155_ap_idle;
wire    grp_fwd_ntt2_fu_155_ap_ready;
wire   [7:0] grp_fwd_ntt2_fu_155_a_address0;
wire    grp_fwd_ntt2_fu_155_a_ce0;
wire    grp_fwd_ntt2_fu_155_a_we0;
wire   [15:0] grp_fwd_ntt2_fu_155_a_d0;
reg   [15:0] grp_fwd_ntt2_fu_155_a_q0;
wire   [7:0] grp_fwd_ntt2_fu_155_a_address1;
wire    grp_fwd_ntt2_fu_155_a_ce1;
wire    grp_fwd_ntt2_fu_155_a_we1;
wire   [15:0] grp_fwd_ntt2_fu_155_a_d1;
reg   [15:0] grp_fwd_ntt2_fu_155_a_q1;
wire    grp_coefficient_mul2_fu_162_ap_start;
wire    grp_coefficient_mul2_fu_162_ap_done;
wire    grp_coefficient_mul2_fu_162_ap_idle;
wire    grp_coefficient_mul2_fu_162_ap_ready;
wire   [7:0] grp_coefficient_mul2_fu_162_out_r_address0;
wire    grp_coefficient_mul2_fu_162_out_r_ce0;
wire    grp_coefficient_mul2_fu_162_out_r_we0;
wire   [15:0] grp_coefficient_mul2_fu_162_out_r_d0;
wire   [7:0] grp_coefficient_mul2_fu_162_b_address0;
wire    grp_coefficient_mul2_fu_162_b_ce0;
reg   [15:0] grp_coefficient_mul2_fu_162_b_q0;
wire   [7:0] grp_coefficient_mul2_fu_162_c_address0;
wire    grp_coefficient_mul2_fu_162_c_ce0;
wire    grp_knuth_yao2_fu_173_ap_start;
wire    grp_knuth_yao2_fu_173_ap_done;
wire    grp_knuth_yao2_fu_173_ap_idle;
wire    grp_knuth_yao2_fu_173_ap_ready;
wire   [7:0] grp_knuth_yao2_fu_173_a_address0;
wire    grp_knuth_yao2_fu_173_a_ce0;
wire    grp_knuth_yao2_fu_173_a_we0;
wire   [15:0] grp_knuth_yao2_fu_173_a_d0;
wire    grp_coefficient_add2_fu_188_ap_start;
wire    grp_coefficient_add2_fu_188_ap_done;
wire    grp_coefficient_add2_fu_188_ap_idle;
wire    grp_coefficient_add2_fu_188_ap_ready;
wire   [7:0] grp_coefficient_add2_fu_188_out_r_address0;
wire    grp_coefficient_add2_fu_188_out_r_ce0;
wire    grp_coefficient_add2_fu_188_out_r_we0;
wire   [15:0] grp_coefficient_add2_fu_188_out_r_d0;
reg   [15:0] grp_coefficient_add2_fu_188_out_r_q0;
wire   [7:0] grp_coefficient_add2_fu_188_b_address0;
wire    grp_coefficient_add2_fu_188_b_ce0;
reg   [15:0] grp_coefficient_add2_fu_188_b_q0;
wire    grp_rearrange2_fu_196_ap_start;
wire    grp_rearrange2_fu_196_ap_done;
wire    grp_rearrange2_fu_196_ap_idle;
wire    grp_rearrange2_fu_196_ap_ready;
wire   [7:0] grp_rearrange2_fu_196_a_address0;
wire    grp_rearrange2_fu_196_a_ce0;
wire    grp_rearrange2_fu_196_a_we0;
wire   [15:0] grp_rearrange2_fu_196_a_d0;
reg   [15:0] grp_rearrange2_fu_196_a_q0;
reg   [8:0] i_reg_133;
wire    ap_CS_fsm_state3;
reg   [8:0] j_i_reg_144;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state31;
reg    ap_reg_grp_fwd_ntt2_fu_155_ap_start;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
reg    ap_reg_grp_coefficient_mul2_fu_162_ap_start;
reg    ap_reg_grp_knuth_yao2_fu_173_ap_start;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
reg    ap_reg_grp_coefficient_add2_fu_188_ap_start;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
reg    ap_reg_grp_rearrange2_fu_196_ap_start;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_i_fu_251_p1;
wire   [15:0] tmp_113_fu_276_p1;
wire   [15:0] tmp_111_fu_220_p2;
wire   [15:0] tmp_112_fu_226_p2;
wire   [16:0] tmp_i_cast_fu_257_p1;
wire   [16:0] tmp_126_i_cast_fu_261_p1;
wire   [13:0] grp_fu_271_p1;
wire    ap_CS_fsm_state11;
wire   [15:0] grp_fu_271_p2;
reg    grp_fu_271_ap_start;
wire    grp_fu_271_ap_done;
reg   [39:0] ap_NS_fsm;
reg    ap_block_state34_on_subcall_done;
reg    ap_block_state36_on_subcall_done;
reg    ap_block_state38_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 ap_reg_grp_fwd_ntt2_fu_155_ap_start = 1'b0;
#0 ap_reg_grp_coefficient_mul2_fu_162_ap_start = 1'b0;
#0 ap_reg_grp_knuth_yao2_fu_173_ap_start = 1'b0;
#0 ap_reg_grp_coefficient_add2_fu_188_ap_start = 1'b0;
#0 ap_reg_grp_rearrange2_fu_196_ap_start = 1'b0;
end

RLWE_enc2_S_AXI_BUNDLE_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_S_AXI_BUNDLE_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_S_AXI_BUNDLE_DATA_WIDTH ))
RLWE_enc2_S_AXI_BUNDLE_s_axi_U(
    .AWVALID(s_axi_S_AXI_BUNDLE_AWVALID),
    .AWREADY(s_axi_S_AXI_BUNDLE_AWREADY),
    .AWADDR(s_axi_S_AXI_BUNDLE_AWADDR),
    .WVALID(s_axi_S_AXI_BUNDLE_WVALID),
    .WREADY(s_axi_S_AXI_BUNDLE_WREADY),
    .WDATA(s_axi_S_AXI_BUNDLE_WDATA),
    .WSTRB(s_axi_S_AXI_BUNDLE_WSTRB),
    .ARVALID(s_axi_S_AXI_BUNDLE_ARVALID),
    .ARREADY(s_axi_S_AXI_BUNDLE_ARREADY),
    .ARADDR(s_axi_S_AXI_BUNDLE_ARADDR),
    .RVALID(s_axi_S_AXI_BUNDLE_RVALID),
    .RREADY(s_axi_S_AXI_BUNDLE_RREADY),
    .RDATA(s_axi_S_AXI_BUNDLE_RDATA),
    .RRESP(s_axi_S_AXI_BUNDLE_RRESP),
    .BVALID(s_axi_S_AXI_BUNDLE_BVALID),
    .BREADY(s_axi_S_AXI_BUNDLE_BREADY),
    .BRESP(s_axi_S_AXI_BUNDLE_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .a_address0(grp_coefficient_mul2_fu_162_b_address0),
    .a_ce0(a_ce0),
    .a_q0(a_q0),
    .c1_address0(c1_address0),
    .c1_ce0(c1_ce0),
    .c1_we0(c1_we0),
    .c1_d0(c1_d0),
    .c1_q0(c1_q0),
    .c2_address0(c2_address0),
    .c2_ce0(c2_ce0),
    .c2_we0(c2_we0),
    .c2_d0(c2_d0),
    .c2_q0(c2_q0),
    .m_address0(m_address0),
    .m_ce0(m_ce0),
    .m_q0(m_q0),
    .p_address0(grp_coefficient_mul2_fu_162_b_address0),
    .p_ce0(p_ce0),
    .p_q0(p_q0)
);

RLWE_enc2_e1 #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
e1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(e1_address0),
    .ce0(e1_ce0),
    .we0(e1_we0),
    .d0(e1_d0),
    .q0(e1_q0),
    .address1(grp_fwd_ntt2_fu_155_a_address1),
    .ce1(e1_ce1),
    .we1(e1_we1),
    .d1(grp_fwd_ntt2_fu_155_a_d1),
    .q1(e1_q1)
);

RLWE_enc2_e1 #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
e2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(e2_address0),
    .ce0(e2_ce0),
    .we0(e2_we0),
    .d0(e2_d0),
    .q0(e2_q0),
    .address1(grp_fwd_ntt2_fu_155_a_address1),
    .ce1(e2_ce1),
    .we1(e2_we1),
    .d1(grp_fwd_ntt2_fu_155_a_d1),
    .q1(e2_q1)
);

RLWE_enc2_e1 #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
e3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(e3_address0),
    .ce0(e3_ce0),
    .we0(e3_we0),
    .d0(e3_d0),
    .q0(e3_q0),
    .address1(grp_fwd_ntt2_fu_155_a_address1),
    .ce1(e3_ce1),
    .we1(e3_we1),
    .d1(grp_fwd_ntt2_fu_155_a_d1),
    .q1(e3_q1)
);

RLWE_enc2_encoded_m #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
encoded_m_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(encoded_m_address0),
    .ce0(encoded_m_ce0),
    .we0(encoded_m_we0),
    .d0(encoded_m_d0),
    .q0(encoded_m_q0)
);

fwd_ntt2 grp_fwd_ntt2_fu_155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fwd_ntt2_fu_155_ap_start),
    .ap_done(grp_fwd_ntt2_fu_155_ap_done),
    .ap_idle(grp_fwd_ntt2_fu_155_ap_idle),
    .ap_ready(grp_fwd_ntt2_fu_155_ap_ready),
    .a_address0(grp_fwd_ntt2_fu_155_a_address0),
    .a_ce0(grp_fwd_ntt2_fu_155_a_ce0),
    .a_we0(grp_fwd_ntt2_fu_155_a_we0),
    .a_d0(grp_fwd_ntt2_fu_155_a_d0),
    .a_q0(grp_fwd_ntt2_fu_155_a_q0),
    .a_address1(grp_fwd_ntt2_fu_155_a_address1),
    .a_ce1(grp_fwd_ntt2_fu_155_a_ce1),
    .a_we1(grp_fwd_ntt2_fu_155_a_we1),
    .a_d1(grp_fwd_ntt2_fu_155_a_d1),
    .a_q1(grp_fwd_ntt2_fu_155_a_q1)
);

coefficient_mul2 grp_coefficient_mul2_fu_162(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_coefficient_mul2_fu_162_ap_start),
    .ap_done(grp_coefficient_mul2_fu_162_ap_done),
    .ap_idle(grp_coefficient_mul2_fu_162_ap_idle),
    .ap_ready(grp_coefficient_mul2_fu_162_ap_ready),
    .out_r_address0(grp_coefficient_mul2_fu_162_out_r_address0),
    .out_r_ce0(grp_coefficient_mul2_fu_162_out_r_ce0),
    .out_r_we0(grp_coefficient_mul2_fu_162_out_r_we0),
    .out_r_d0(grp_coefficient_mul2_fu_162_out_r_d0),
    .b_address0(grp_coefficient_mul2_fu_162_b_address0),
    .b_ce0(grp_coefficient_mul2_fu_162_b_ce0),
    .b_q0(grp_coefficient_mul2_fu_162_b_q0),
    .c_address0(grp_coefficient_mul2_fu_162_c_address0),
    .c_ce0(grp_coefficient_mul2_fu_162_c_ce0),
    .c_q0(e1_q0)
);

knuth_yao2 grp_knuth_yao2_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_knuth_yao2_fu_173_ap_start),
    .ap_done(grp_knuth_yao2_fu_173_ap_done),
    .ap_idle(grp_knuth_yao2_fu_173_ap_idle),
    .ap_ready(grp_knuth_yao2_fu_173_ap_ready),
    .a_address0(grp_knuth_yao2_fu_173_a_address0),
    .a_ce0(grp_knuth_yao2_fu_173_a_ce0),
    .a_we0(grp_knuth_yao2_fu_173_a_we0),
    .a_d0(grp_knuth_yao2_fu_173_a_d0)
);

coefficient_add2 grp_coefficient_add2_fu_188(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_coefficient_add2_fu_188_ap_start),
    .ap_done(grp_coefficient_add2_fu_188_ap_done),
    .ap_idle(grp_coefficient_add2_fu_188_ap_idle),
    .ap_ready(grp_coefficient_add2_fu_188_ap_ready),
    .out_r_address0(grp_coefficient_add2_fu_188_out_r_address0),
    .out_r_ce0(grp_coefficient_add2_fu_188_out_r_ce0),
    .out_r_we0(grp_coefficient_add2_fu_188_out_r_we0),
    .out_r_d0(grp_coefficient_add2_fu_188_out_r_d0),
    .out_r_q0(grp_coefficient_add2_fu_188_out_r_q0),
    .b_address0(grp_coefficient_add2_fu_188_b_address0),
    .b_ce0(grp_coefficient_add2_fu_188_b_ce0),
    .b_q0(grp_coefficient_add2_fu_188_b_q0)
);

rearrange2 grp_rearrange2_fu_196(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rearrange2_fu_196_ap_start),
    .ap_done(grp_rearrange2_fu_196_ap_done),
    .ap_idle(grp_rearrange2_fu_196_ap_idle),
    .ap_ready(grp_rearrange2_fu_196_ap_ready),
    .a_address0(grp_rearrange2_fu_196_a_address0),
    .a_ce0(grp_rearrange2_fu_196_a_ce0),
    .a_we0(grp_rearrange2_fu_196_a_we0),
    .a_d0(grp_rearrange2_fu_196_a_d0),
    .a_q0(grp_rearrange2_fu_196_a_q0)
);

RLWE_enc2_urem_17lbW #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
RLWE_enc2_urem_17lbW_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_271_ap_start),
    .done(grp_fu_271_ap_done),
    .din0(a_1_reg_317),
    .din1(grp_fu_271_p1),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_coefficient_add2_fu_188_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
            ap_reg_grp_coefficient_add2_fu_188_ap_start <= 1'b1;
        end else if ((grp_coefficient_add2_fu_188_ap_ready == 1'b1)) begin
            ap_reg_grp_coefficient_add2_fu_188_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_coefficient_mul2_fu_162_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
            ap_reg_grp_coefficient_mul2_fu_162_ap_start <= 1'b1;
        end else if ((grp_coefficient_mul2_fu_162_ap_ready == 1'b1)) begin
            ap_reg_grp_coefficient_mul2_fu_162_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_fwd_ntt2_fu_155_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_239_p2 == 1'd1)))) begin
            ap_reg_grp_fwd_ntt2_fu_155_ap_start <= 1'b1;
        end else if ((grp_fwd_ntt2_fu_155_ap_ready == 1'b1)) begin
            ap_reg_grp_fwd_ntt2_fu_155_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_knuth_yao2_fu_173_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_203_p2 == 1'd1)))) begin
            ap_reg_grp_knuth_yao2_fu_173_ap_start <= 1'b1;
        end else if ((grp_knuth_yao2_fu_173_ap_ready == 1'b1)) begin
            ap_reg_grp_knuth_yao2_fu_173_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_rearrange2_fu_196_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37))) begin
            ap_reg_grp_rearrange2_fu_196_ap_start <= 1'b1;
        end else if ((grp_rearrange2_fu_196_ap_ready == 1'b1)) begin
            ap_reg_grp_rearrange2_fu_196_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_133 <= i_5_reg_284;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_133 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j_i_reg_144 <= j_reg_302;
    end else if (((grp_knuth_yao2_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        j_i_reg_144 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_1_reg_317 <= a_1_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_239_p2 == 1'd0))) begin
        e3_addr_reg_307 <= tmp_i_fu_251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_5_reg_284 <= i_5_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_reg_302 <= j_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_203_p2 == 1'd0))) begin
        tmp_reg_289[8 : 0] <= tmp_fu_215_p1[8 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        a_ce0 = grp_coefficient_mul2_fu_162_b_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_rearrange2_fu_196_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_rearrange2_fu_196_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c1_address0 = grp_rearrange2_fu_196_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c1_address0 = grp_coefficient_add2_fu_188_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c1_address0 = grp_coefficient_mul2_fu_162_out_r_address0;
    end else begin
        c1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c1_ce0 = grp_rearrange2_fu_196_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c1_ce0 = grp_coefficient_add2_fu_188_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c1_ce0 = grp_coefficient_mul2_fu_162_out_r_ce0;
    end else begin
        c1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c1_d0 = grp_rearrange2_fu_196_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c1_d0 = grp_coefficient_add2_fu_188_out_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c1_d0 = grp_coefficient_mul2_fu_162_out_r_d0;
    end else begin
        c1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c1_we0 = grp_rearrange2_fu_196_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c1_we0 = grp_coefficient_add2_fu_188_out_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c1_we0 = grp_coefficient_mul2_fu_162_out_r_we0;
    end else begin
        c1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        c2_address0 = grp_rearrange2_fu_196_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        c2_address0 = grp_coefficient_add2_fu_188_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c2_address0 = grp_coefficient_mul2_fu_162_out_r_address0;
    end else begin
        c2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        c2_ce0 = grp_rearrange2_fu_196_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        c2_ce0 = grp_coefficient_add2_fu_188_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c2_ce0 = grp_coefficient_mul2_fu_162_out_r_ce0;
    end else begin
        c2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        c2_d0 = grp_rearrange2_fu_196_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        c2_d0 = grp_coefficient_add2_fu_188_out_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c2_d0 = grp_coefficient_mul2_fu_162_out_r_d0;
    end else begin
        c2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        c2_we0 = grp_rearrange2_fu_196_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        c2_we0 = grp_coefficient_add2_fu_188_out_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        c2_we0 = grp_coefficient_mul2_fu_162_out_r_we0;
    end else begin
        c2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        e1_address0 = grp_knuth_yao2_fu_173_a_address0;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34))) begin
        e1_address0 = grp_coefficient_mul2_fu_162_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_address0 = grp_fwd_ntt2_fu_155_a_address0;
    end else begin
        e1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        e1_ce0 = grp_knuth_yao2_fu_173_a_ce0;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34))) begin
        e1_ce0 = grp_coefficient_mul2_fu_162_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_ce0 = grp_fwd_ntt2_fu_155_a_ce0;
    end else begin
        e1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_ce1 = grp_fwd_ntt2_fu_155_a_ce1;
    end else begin
        e1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        e1_d0 = grp_knuth_yao2_fu_173_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_d0 = grp_fwd_ntt2_fu_155_a_d0;
    end else begin
        e1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        e1_we0 = grp_knuth_yao2_fu_173_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_we0 = grp_fwd_ntt2_fu_155_a_we0;
    end else begin
        e1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        e1_we1 = grp_fwd_ntt2_fu_155_a_we1;
    end else begin
        e1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        e2_address0 = grp_coefficient_add2_fu_188_b_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        e2_address0 = grp_knuth_yao2_fu_173_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_address0 = grp_fwd_ntt2_fu_155_a_address0;
    end else begin
        e2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        e2_ce0 = grp_coefficient_add2_fu_188_b_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        e2_ce0 = grp_knuth_yao2_fu_173_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_ce0 = grp_fwd_ntt2_fu_155_a_ce0;
    end else begin
        e2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_ce1 = grp_fwd_ntt2_fu_155_a_ce1;
    end else begin
        e2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        e2_d0 = grp_knuth_yao2_fu_173_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_d0 = grp_fwd_ntt2_fu_155_a_d0;
    end else begin
        e2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        e2_we0 = grp_knuth_yao2_fu_173_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_we0 = grp_fwd_ntt2_fu_155_a_we0;
    end else begin
        e2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        e2_we1 = grp_fwd_ntt2_fu_155_a_we1;
    end else begin
        e2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        e3_address0 = e3_addr_reg_307;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        e3_address0 = tmp_i_fu_251_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        e3_address0 = grp_coefficient_add2_fu_188_b_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        e3_address0 = grp_knuth_yao2_fu_173_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_address0 = grp_fwd_ntt2_fu_155_a_address0;
    end else begin
        e3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state9))) begin
        e3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        e3_ce0 = grp_coefficient_add2_fu_188_b_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        e3_ce0 = grp_knuth_yao2_fu_173_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_ce0 = grp_fwd_ntt2_fu_155_a_ce0;
    end else begin
        e3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_ce1 = grp_fwd_ntt2_fu_155_a_ce1;
    end else begin
        e3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        e3_d0 = tmp_113_fu_276_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        e3_d0 = grp_knuth_yao2_fu_173_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_d0 = grp_fwd_ntt2_fu_155_a_d0;
    end else begin
        e3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        e3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        e3_we0 = grp_knuth_yao2_fu_173_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_we0 = grp_fwd_ntt2_fu_155_a_we0;
    end else begin
        e3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        e3_we1 = grp_fwd_ntt2_fu_155_a_we1;
    end else begin
        e3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        encoded_m_address0 = tmp_i_fu_251_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        encoded_m_address0 = tmp_reg_289;
    end else begin
        encoded_m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        encoded_m_ce0 = 1'b1;
    end else begin
        encoded_m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        encoded_m_we0 = 1'b1;
    end else begin
        encoded_m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_coefficient_add2_fu_188_b_q0 = e3_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_coefficient_add2_fu_188_b_q0 = e2_q0;
    end else begin
        grp_coefficient_add2_fu_188_b_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_coefficient_add2_fu_188_out_r_q0 = c2_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_coefficient_add2_fu_188_out_r_q0 = c1_q0;
    end else begin
        grp_coefficient_add2_fu_188_out_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_coefficient_mul2_fu_162_b_q0 = p_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_coefficient_mul2_fu_162_b_q0 = a_q0;
    end else begin
        grp_coefficient_mul2_fu_162_b_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_271_ap_start = 1'b1;
    end else begin
        grp_fu_271_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fwd_ntt2_fu_155_a_q0 = e3_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fwd_ntt2_fu_155_a_q0 = e2_q0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fwd_ntt2_fu_155_a_q0 = e1_q0;
    end else begin
        grp_fwd_ntt2_fu_155_a_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fwd_ntt2_fu_155_a_q1 = e3_q1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fwd_ntt2_fu_155_a_q1 = e2_q1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fwd_ntt2_fu_155_a_q1 = e1_q1;
    end else begin
        grp_fwd_ntt2_fu_155_a_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_rearrange2_fu_196_a_q0 = c2_q0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_rearrange2_fu_196_a_q0 = c1_q0;
    end else begin
        grp_rearrange2_fu_196_a_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p_ce0 = grp_coefficient_mul2_fu_162_b_ce0;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_203_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_knuth_yao2_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_knuth_yao2_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_knuth_yao2_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_239_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_fwd_ntt2_fu_155_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b0 == ap_block_state34_on_subcall_done) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b0 == ap_block_state38_on_subcall_done) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_rearrange2_fu_196_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_fu_265_p2 = (tmp_i_cast_fu_257_p1 + tmp_126_i_cast_fu_261_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state34_on_subcall_done = ((grp_coefficient_mul2_fu_162_ap_done == 1'b0) | (grp_fwd_ntt2_fu_155_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state36_on_subcall_done = ((grp_coefficient_add2_fu_188_ap_done == 1'b0) | (grp_coefficient_mul2_fu_162_ap_done == 1'b0) | (grp_fwd_ntt2_fu_155_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state38_on_subcall_done = ((grp_rearrange2_fu_196_ap_done == 1'b0) | (grp_coefficient_add2_fu_188_ap_done == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign encoded_m_d0 = (tmp_111_fu_220_p2 - tmp_112_fu_226_p2);

assign exitcond_fu_203_p2 = ((i_reg_133 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_i_fu_239_p2 = ((j_i_reg_144 == 9'd256) ? 1'b1 : 1'b0);

assign grp_coefficient_add2_fu_188_ap_start = ap_reg_grp_coefficient_add2_fu_188_ap_start;

assign grp_coefficient_mul2_fu_162_ap_start = ap_reg_grp_coefficient_mul2_fu_162_ap_start;

assign grp_fu_271_p1 = 17'd7681;

assign grp_fwd_ntt2_fu_155_ap_start = ap_reg_grp_fwd_ntt2_fu_155_ap_start;

assign grp_knuth_yao2_fu_173_ap_start = ap_reg_grp_knuth_yao2_fu_173_ap_start;

assign grp_rearrange2_fu_196_ap_start = ap_reg_grp_rearrange2_fu_196_ap_start;

assign i_5_fu_209_p2 = (i_reg_133 + 9'd1);

assign j_fu_245_p2 = (j_i_reg_144 + 9'd1);

assign m_address0 = tmp_fu_215_p1;

assign tmp_111_fu_220_p2 = m_q0 << 16'd12;

assign tmp_112_fu_226_p2 = m_q0 << 16'd8;

assign tmp_113_fu_276_p1 = grp_fu_271_p2[15:0];

assign tmp_126_i_cast_fu_261_p1 = encoded_m_q0;

assign tmp_fu_215_p1 = i_reg_133;

assign tmp_i_cast_fu_257_p1 = e3_q0;

assign tmp_i_fu_251_p1 = j_i_reg_144;

always @ (posedge ap_clk) begin
    tmp_reg_289[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //RLWE_enc2
