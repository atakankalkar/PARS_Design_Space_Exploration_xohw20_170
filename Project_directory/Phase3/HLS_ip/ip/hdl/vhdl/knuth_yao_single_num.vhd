-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity knuth_yao_single_num is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rnd_read : IN STD_LOGIC_VECTOR (31 downto 0);
    lfsr32_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lfsr32_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lfsr32_o_ap_vld : OUT STD_LOGIC;
    lfsr31_i : IN STD_LOGIC_VECTOR (31 downto 0);
    lfsr31_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    lfsr31_o_ap_vld : OUT STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of knuth_yao_single_num is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_601 : STD_LOGIC_VECTOR (10 downto 0) := "11000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv7_6D : STD_LOGIC_VECTOR (6 downto 0) := "1101101";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv13_6D : STD_LOGIC_VECTOR (12 downto 0) := "0000001101101";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lut1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut1_ce0 : STD_LOGIC;
    signal lut1_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut2_ce0 : STD_LOGIC;
    signal lut2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pmat_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal pmat_ce0 : STD_LOGIC;
    signal pmat_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_get_rand_fu_283_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_6_fu_340_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_reg_1136 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal lut1_load_reg_1153 : STD_LOGIC_VECTOR (4 downto 0);
    signal sample_fu_336_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sample_reg_1158 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1170 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_x_i4_fu_385_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_i4_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp2_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_1182 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_5_cast_fu_434_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_18_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_686_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_reg_1210 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_710_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_15_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sample_1_cast_fu_767_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_27_fu_781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_29_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1277 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_cast_fu_925_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_cast_reg_1284 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_62_fu_934_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal column_1_fu_950_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_fu_974_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_63_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_get_rand_fu_283_ap_ready : STD_LOGIC;
    signal grp_get_rand_fu_283_lfsr32_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_get_rand_fu_283_lfsr32_o_ap_vld : STD_LOGIC;
    signal grp_get_rand_fu_283_lfsr31_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_get_rand_fu_283_lfsr31_o_ap_vld : STD_LOGIC;
    signal tmp_17_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal rnd_1_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal rnd_2_reg_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal column_reg_219 : STD_LOGIC_VECTOR (6 downto 0);
    signal sample_7_reg_231 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_rnd_7_phi_fu_246_p14 : STD_LOGIC_VECTOR (31 downto 0);
    signal rnd_7_reg_243 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_phi_fu_266_p14 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_0_reg_262 : STD_LOGIC_VECTOR (13 downto 0);
    signal sample_2_cast_fu_1011_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_36_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_cast_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_cast_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_fu_897_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_3_fu_960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rnd_4_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_fu_314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_353_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_368_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_assign_1_fu_377_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_393_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sample_3_cast_cast_fu_413_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_409_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_3_fu_416_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_4_fu_422_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_5_cast1_fu_430_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_assign_5_fu_438_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_34_fu_452_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_486_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_fu_476_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_496_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_500_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp5_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_5_fu_514_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_i_fu_468_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_6_fu_522_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_fu_543_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_i3_fu_536_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i9_fu_562_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_568_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_1_i8_fu_555_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp3_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_1_fu_584_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_fu_604_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_612_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_2_i_fu_596_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp4_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_2_fu_628_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_642_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_658_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_3_i_fu_634_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_3_fu_666_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_4_fu_674_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_fu_689_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_700_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal index_1_fu_693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sample_5_fu_733_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sample_7_cast_cast_fu_745_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_48_fu_725_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_6_fu_749_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_1_fu_755_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_1_cast1_fu_763_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_assign_6_fu_771_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_55_fu_785_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp6_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_819_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_56_fu_809_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_829_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp7_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_7_fu_847_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_i1_fu_801_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_8_fu_855_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal distance_1_fu_729_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_60_fu_889_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_61_fu_893_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_298_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1122_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal pmat_load_cast_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sample_9_cast67_cast_fu_989_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_64_fu_985_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_8_fu_993_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_2_fu_999_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sample_2_cast1_fu_1007_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_fu_1022_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp8_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1056_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_66_fu_1046_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_fu_1066_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_1070_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp9_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_9_fu_1084_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_i2_fu_1038_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_10_fu_1092_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0_cast_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1122_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1122_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1122_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1122_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_condition_313 : BOOLEAN;

    component get_rand IS
    port (
        ap_ready : OUT STD_LOGIC;
        lfsr32_i : IN STD_LOGIC_VECTOR (31 downto 0);
        lfsr32_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        lfsr32_o_ap_vld : OUT STD_LOGIC;
        lfsr31_i : IN STD_LOGIC_VECTOR (31 downto 0);
        lfsr31_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        lfsr31_o_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component RLWE_enc2_mac_muleOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component knuth_yao_single_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component knuth_yao_single_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component knuth_yao_single_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    lut1_U : component knuth_yao_single_bkb
    generic map (
        DataWidth => 5,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut1_address0,
        ce0 => lut1_ce0,
        q0 => lut1_q0);

    lut2_U : component knuth_yao_single_cud
    generic map (
        DataWidth => 6,
        AddressRange => 224,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut2_address0,
        ce0 => lut2_ce0,
        q0 => lut2_q0);

    pmat_U : component knuth_yao_single_dEe
    generic map (
        DataWidth => 1,
        AddressRange => 5995,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pmat_address0,
        ce0 => pmat_ce0,
        q0 => pmat_q0);

    grp_get_rand_fu_283 : component get_rand
    port map (
        ap_ready => grp_get_rand_fu_283_ap_ready,
        lfsr32_i => lfsr32_i,
        lfsr32_o => grp_get_rand_fu_283_lfsr32_o,
        lfsr32_o_ap_vld => grp_get_rand_fu_283_lfsr32_o_ap_vld,
        lfsr31_i => lfsr31_i,
        lfsr31_o => grp_get_rand_fu_283_lfsr31_o,
        lfsr31_o_ap_vld => grp_get_rand_fu_283_lfsr31_o_ap_vld,
        ap_return => grp_get_rand_fu_283_ap_return);

    RLWE_enc2_mac_muleOg_U3 : component RLWE_enc2_mac_muleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        din2_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1122_p0,
        din1 => grp_fu_1122_p1,
        din2 => grp_fu_1122_p2,
        dout => grp_fu_1122_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then 
                    ap_return_0_preg <= p_0_cast_fu_1106_p1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then 
                    ap_return_1_preg <= ap_phi_mux_rnd_7_phi_fu_246_p14;
                end if; 
            end if;
        end if;
    end process;


    column_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_62_fu_934_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                column_reg_219 <= column_1_fu_950_p2;
            elsif (((tmp_54_fu_737_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                column_reg_219 <= ap_const_lv7_D;
            end if; 
        end if;
    end process;

    distance_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                distance_fu_142 <= distance_3_fu_960_p2;
            elsif (((tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                distance_fu_142 <= distance_2_fu_897_p3;
            elsif (((tmp_54_fu_737_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                distance_fu_142 <= distance_cast_fu_869_p1;
            end if; 
        end if;
    end process;

    p_0_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_883_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                p_0_reg_262 <= ap_const_lv14_3FFF;
            elsif ((((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
                p_0_reg_262 <= sample_2_cast_fu_1011_p1;
            elsif ((((tmp_28_fu_863_p2 = ap_const_lv1_0) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                p_0_reg_262 <= sample_1_cast_fu_767_p1;
            elsif ((((tmp_21_fu_530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                p_0_reg_262 <= sample_5_cast_fu_434_p1;
            end if; 
        end if;
    end process;

    rnd_1_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((tmp_1_fu_680_p2 = ap_const_lv1_0)) then 
                    rnd_1_reg_201 <= tmp_8_reg_1147;
                elsif ((tmp_1_fu_680_p2 = ap_const_lv1_1)) then 
                    rnd_1_reg_201 <= grp_get_rand_fu_283_ap_return;
                end if;
            end if; 
        end if;
    end process;

    rnd_2_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                if ((tmp_15_fu_714_p2 = ap_const_lv1_0)) then 
                    rnd_2_reg_210 <= tmp_10_fu_710_p1;
                elsif ((tmp_15_fu_714_p2 = ap_const_lv1_1)) then 
                    rnd_2_reg_210 <= grp_get_rand_fu_283_ap_return;
                end if;
            end if; 
        end if;
    end process;

    rnd_4_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_36_fu_909_p2 = ap_const_lv1_1) and (tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                rnd_4_fu_146 <= grp_get_rand_fu_283_ap_return;
            elsif (((tmp_29_fu_883_p2 = ap_const_lv1_1) and (tmp_36_fu_909_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                rnd_4_fu_146 <= tmp_35_fu_905_p1;
            elsif (((tmp_54_fu_737_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                rnd_4_fu_146 <= rnd_2_reg_210;
            end if; 
        end if;
    end process;

    rnd_7_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_883_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                rnd_7_reg_243 <= rnd_4_fu_146;
            elsif (((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                rnd_7_reg_243 <= tmp_41_fu_1017_p1;
            elsif (((tmp_28_fu_863_p2 = ap_const_lv1_0) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                rnd_7_reg_243 <= tmp_27_fu_781_p1;
            elsif (((tmp_21_fu_530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                rnd_7_reg_243 <= tmp_18_fu_448_p1;
            elsif ((((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                rnd_7_reg_243 <= grp_get_rand_fu_283_ap_return;
            end if; 
        end if;
    end process;

    sample_7_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                sample_7_reg_231 <= row_fu_974_p2;
            elsif (((tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                sample_7_reg_231 <= ap_const_lv7_36;
            end if; 
        end if;
    end process;

    tmp_17_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                if ((tmp_2_fu_348_p2 = ap_const_lv1_0)) then 
                    tmp_17_reg_192 <= tmp_8_fu_333_p1;
                elsif ((tmp_2_fu_348_p2 = ap_const_lv1_1)) then 
                    tmp_17_reg_192 <= grp_get_rand_fu_283_ap_return;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_fu_340_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp1_reg_1170 <= icmp1_fu_362_p2;
                icmp2_reg_1182 <= icmp2_fu_403_p2;
                p_x_i4_reg_1176 <= p_x_i4_fu_385_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                lut1_load_reg_1153 <= lut1_q0;
                sample_reg_1158 <= sample_fu_336_p1;
                tmp_6_reg_1163 <= lut1_q0(4 downto 4);
                    tmp_8_reg_1147(23 downto 0) <= tmp_8_fu_333_p1(23 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_29_reg_1277 <= tmp_29_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_31_reg_1210 <= tmp_31_fu_686_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    tmp_43_cast_reg_1284(6 downto 0) <= tmp_43_cast_fu_925_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_54_reg_1233 <= lut2_q0(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                x_assign_reg_1136 <= rnd_read(31 downto 8);
            end if;
        end if;
    end process;
    tmp_8_reg_1147(31 downto 24) <= "00000000";
    tmp_43_cast_reg_1284(12 downto 7) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_6_fu_340_p3, tmp_6_reg_1163, tmp_54_fu_737_p3, tmp_54_reg_1233, ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_29_fu_883_p2, tmp_29_reg_1277, ap_CS_fsm_state8, tmp_62_fu_934_p3, ap_CS_fsm_state9, tmp_63_fu_966_p3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((tmp_54_fu_737_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state7 => 
                if (((tmp_29_fu_883_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((tmp_62_fu_934_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_condition_313_assign_proc : process(tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3)
    begin
                ap_condition_313 <= ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0_phi_fu_266_p14_assign_proc : process(tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, tmp_42_fu_1100_p2, p_0_reg_262, sample_2_cast_fu_1011_p1)
    begin
        if ((((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            ap_phi_mux_p_0_phi_fu_266_p14 <= sample_2_cast_fu_1011_p1;
        else 
            ap_phi_mux_p_0_phi_fu_266_p14 <= p_0_reg_262;
        end if; 
    end process;


    ap_phi_mux_rnd_7_phi_fu_246_p14_assign_proc : process(grp_get_rand_fu_283_ap_return, rnd_7_reg_243, tmp_42_fu_1100_p2, tmp_41_fu_1017_p1, ap_condition_313)
    begin
        if ((ap_const_boolean_1 = ap_condition_313)) then
            if ((tmp_42_fu_1100_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_rnd_7_phi_fu_246_p14 <= tmp_41_fu_1017_p1;
            elsif ((tmp_42_fu_1100_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_rnd_7_phi_fu_246_p14 <= grp_get_rand_fu_283_ap_return;
            else 
                ap_phi_mux_rnd_7_phi_fu_246_p14 <= rnd_7_reg_243;
            end if;
        else 
            ap_phi_mux_rnd_7_phi_fu_246_p14 <= rnd_7_reg_243;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, p_0_cast_fu_1106_p1, ap_return_0_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then 
            ap_return_0 <= p_0_cast_fu_1106_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(tmp_6_reg_1163, tmp_54_reg_1233, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, ap_phi_mux_rnd_7_phi_fu_246_p14, ap_return_1_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((tmp_63_fu_966_p3 = ap_const_lv1_1) or (tmp_6_reg_1163 = ap_const_lv1_0) or (tmp_29_reg_1277 = ap_const_lv1_0) or (tmp_54_reg_1233 = ap_const_lv1_0)))) then 
            ap_return_1 <= ap_phi_mux_rnd_7_phi_fu_246_p14;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    column_1_fu_950_p2 <= std_logic_vector(unsigned(column_reg_219) + unsigned(ap_const_lv7_1));
    distance_1_fu_729_p1 <= lut2_q0(4 - 1 downto 0);
    distance_2_fu_897_p3 <= (tmp_60_fu_889_p1 & tmp_61_fu_893_p1);
    distance_3_fu_960_p2 <= std_logic_vector(unsigned(distance_fu_142) - unsigned(pmat_load_cast_fu_956_p1));
    distance_cast_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(distance_1_fu_729_p1),32));
    grp_fu_1122_p0 <= grp_fu_1122_p00(7 - 1 downto 0);
    grp_fu_1122_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_7_reg_231),13));
    grp_fu_1122_p1 <= ap_const_lv13_6D(8 - 1 downto 0);
    grp_fu_1122_p2 <= tmp_43_cast_reg_1284(7 - 1 downto 0);
    grp_fu_298_p4 <= rnd_4_fu_146(31 downto 1);
    icmp1_fu_362_p2 <= "1" when (tmp_7_fu_353_p4 = ap_const_lv8_0) else "0";
    icmp2_fu_403_p2 <= "1" when (tmp_9_fu_393_p4 = ap_const_lv8_0) else "0";
    icmp3_fu_578_p2 <= "1" when (tmp_12_fu_568_p4 = ap_const_lv4_0) else "0";
    icmp4_fu_622_p2 <= "1" when (tmp_14_fu_612_p4 = ap_const_lv2_0) else "0";
    icmp5_fu_508_p2 <= "1" when (tmp_45_fu_500_p3 = ap_const_lv8_0) else "0";
    icmp6_fu_795_p2 <= "1" when (tmp_55_fu_785_p4 = ap_const_lv15_0) else "0";
    icmp7_fu_841_p2 <= "1" when (tmp_59_fu_833_p3 = ap_const_lv8_0) else "0";
    icmp8_fu_1032_p2 <= "1" when (tmp_65_fu_1022_p4 = ap_const_lv15_0) else "0";
    icmp9_fu_1078_p2 <= "1" when (tmp_69_fu_1070_p3 = ap_const_lv8_0) else "0";
    icmp_fu_462_p2 <= "1" when (tmp_34_fu_452_p4 = ap_const_lv15_0) else "0";
    index_1_fu_693_p3 <= (tmp_31_reg_1210 & tmp_26_fu_689_p1);
    index_fu_314_p1 <= rnd_read(8 - 1 downto 0);

    lfsr31_o_assign_proc : process(lfsr31_i, ap_CS_fsm_state2, tmp_6_fu_340_p3, tmp_2_fu_348_p2, ap_CS_fsm_state4, tmp_1_fu_680_p2, tmp_6_reg_1163, ap_CS_fsm_state3, tmp_21_fu_530_p2, ap_CS_fsm_state5, tmp_15_fu_714_p2, tmp_54_fu_737_p3, tmp_54_reg_1233, ap_CS_fsm_state6, tmp_28_fu_863_p2, ap_CS_fsm_state7, tmp_29_fu_883_p2, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, grp_get_rand_fu_283_lfsr31_o, grp_get_rand_fu_283_lfsr31_o_ap_vld, tmp_42_fu_1100_p2, tmp_36_fu_909_p2)
    begin
        if ((((tmp_1_fu_680_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1)) or ((tmp_2_fu_348_p2 = ap_const_lv1_1) and (tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_36_fu_909_p2 = ap_const_lv1_1) and (tmp_29_fu_883_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_15_fu_714_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr31_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            lfsr31_o <= grp_get_rand_fu_283_lfsr31_o;
        else 
            lfsr31_o <= lfsr31_i;
        end if; 
    end process;


    lfsr31_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, tmp_6_fu_340_p3, tmp_2_fu_348_p2, ap_CS_fsm_state4, tmp_1_fu_680_p2, tmp_6_reg_1163, ap_CS_fsm_state3, tmp_21_fu_530_p2, ap_CS_fsm_state5, tmp_15_fu_714_p2, tmp_54_fu_737_p3, tmp_54_reg_1233, ap_CS_fsm_state6, tmp_28_fu_863_p2, ap_CS_fsm_state7, tmp_29_fu_883_p2, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, grp_get_rand_fu_283_lfsr31_o_ap_vld, tmp_42_fu_1100_p2, tmp_36_fu_909_p2)
    begin
        if ((((tmp_1_fu_680_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_2_fu_348_p2 = ap_const_lv1_1) and (tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_36_fu_909_p2 = ap_const_lv1_1) and (tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_15_fu_714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            lfsr31_o_ap_vld <= grp_get_rand_fu_283_lfsr31_o_ap_vld;
        else 
            lfsr31_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    lfsr32_o_assign_proc : process(lfsr32_i, ap_CS_fsm_state2, tmp_6_fu_340_p3, tmp_2_fu_348_p2, ap_CS_fsm_state4, tmp_1_fu_680_p2, tmp_6_reg_1163, ap_CS_fsm_state3, tmp_21_fu_530_p2, ap_CS_fsm_state5, tmp_15_fu_714_p2, tmp_54_fu_737_p3, tmp_54_reg_1233, ap_CS_fsm_state6, tmp_28_fu_863_p2, ap_CS_fsm_state7, tmp_29_fu_883_p2, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, grp_get_rand_fu_283_lfsr32_o, grp_get_rand_fu_283_lfsr32_o_ap_vld, tmp_42_fu_1100_p2, tmp_36_fu_909_p2)
    begin
        if ((((tmp_1_fu_680_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1)) or ((tmp_2_fu_348_p2 = ap_const_lv1_1) and (tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_36_fu_909_p2 = ap_const_lv1_1) and (tmp_29_fu_883_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_15_fu_714_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (grp_get_rand_fu_283_lfsr32_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            lfsr32_o <= grp_get_rand_fu_283_lfsr32_o;
        else 
            lfsr32_o <= lfsr32_i;
        end if; 
    end process;


    lfsr32_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, tmp_6_fu_340_p3, tmp_2_fu_348_p2, ap_CS_fsm_state4, tmp_1_fu_680_p2, tmp_6_reg_1163, ap_CS_fsm_state3, tmp_21_fu_530_p2, ap_CS_fsm_state5, tmp_15_fu_714_p2, tmp_54_fu_737_p3, tmp_54_reg_1233, ap_CS_fsm_state6, tmp_28_fu_863_p2, ap_CS_fsm_state7, tmp_29_fu_883_p2, tmp_29_reg_1277, ap_CS_fsm_state9, tmp_63_fu_966_p3, grp_get_rand_fu_283_lfsr32_o_ap_vld, tmp_42_fu_1100_p2, tmp_36_fu_909_p2)
    begin
        if ((((tmp_1_fu_680_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_2_fu_348_p2 = ap_const_lv1_1) and (tmp_6_fu_340_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_6_reg_1163 = ap_const_lv1_1) and (tmp_42_fu_1100_p2 = ap_const_lv1_1) and (tmp_63_fu_966_p3 = ap_const_lv1_1) and (tmp_29_reg_1277 = ap_const_lv1_1) and (tmp_54_reg_1233 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_36_fu_909_p2 = ap_const_lv1_1) and (tmp_29_fu_883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_28_fu_863_p2 = ap_const_lv1_1) and (tmp_54_fu_737_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_15_fu_714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_21_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            lfsr32_o_ap_vld <= grp_get_rand_fu_283_lfsr32_o_ap_vld;
        else 
            lfsr32_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lut1_address0 <= tmp_fu_328_p1(8 - 1 downto 0);

    lut1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            lut1_ce0 <= ap_const_logic_1;
        else 
            lut1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut2_address0 <= tmp_24_fu_720_p1(8 - 1 downto 0);

    lut2_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lut2_ce0 <= ap_const_logic_1;
        else 
            lut2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    n_10_fu_1092_p3 <= 
        n_9_fu_1084_p3 when (icmp9_fu_1078_p2(0) = '1') else 
        p_i2_fu_1038_p3;
    n_1_fu_584_p2 <= (n_1_i8_fu_555_p3 or ap_const_lv5_4);
    n_1_i8_fu_555_p3 <= 
        n_fu_543_p3 when (icmp2_reg_1182(0) = '1') else 
        p_i3_fu_536_p3;
    n_2_fu_628_p2 <= (n_2_i_fu_596_p3 or ap_const_lv5_2);
    n_2_i_fu_596_p3 <= 
        n_1_fu_584_p2 when (icmp3_fu_578_p2(0) = '1') else 
        n_1_i8_fu_555_p3;
    n_3_fu_666_p3 <= 
        ap_const_lv5_0 when (tmp_23_fu_658_p3(0) = '1') else 
        ap_const_lv5_1;
    n_3_i_fu_634_p3 <= 
        n_2_fu_628_p2 when (icmp4_fu_622_p2(0) = '1') else 
        n_2_i_fu_596_p3;
    n_4_fu_674_p2 <= (n_3_i_fu_634_p3 or n_3_fu_666_p3);
    n_5_fu_514_p3 <= 
        ap_const_lv5_18 when (icmp_fu_462_p2(0) = '1') else 
        ap_const_lv5_8;
    n_6_fu_522_p3 <= 
        n_5_fu_514_p3 when (icmp5_fu_508_p2(0) = '1') else 
        p_i_fu_468_p3;
    n_7_fu_847_p3 <= 
        ap_const_lv5_18 when (icmp6_fu_795_p2(0) = '1') else 
        ap_const_lv5_8;
    n_8_fu_855_p3 <= 
        n_7_fu_847_p3 when (icmp7_fu_841_p2(0) = '1') else 
        p_i1_fu_801_p3;
    n_9_fu_1084_p3 <= 
        ap_const_lv5_18 when (icmp8_fu_1032_p2(0) = '1') else 
        ap_const_lv5_8;
    n_fu_543_p3 <= 
        ap_const_lv5_18 when (icmp1_reg_1170(0) = '1') else 
        ap_const_lv5_8;
        p_0_cast_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_p_0_phi_fu_266_p14),32));

    p_1_i9_fu_562_p3 <= 
        tmp_11_fu_550_p2 when (icmp2_reg_1182(0) = '1') else 
        p_x_i4_reg_1176;
    p_2_i_fu_604_p3 <= 
        tmp_13_fu_590_p2 when (icmp3_fu_578_p2(0) = '1') else 
        p_1_i9_fu_562_p3;
    p_i1_fu_801_p3 <= 
        ap_const_lv5_10 when (icmp6_fu_795_p2(0) = '1') else 
        ap_const_lv5_0;
    p_i2_fu_1038_p3 <= 
        ap_const_lv5_10 when (icmp8_fu_1032_p2(0) = '1') else 
        ap_const_lv5_0;
    p_i3_fu_536_p3 <= 
        ap_const_lv5_10 when (icmp1_reg_1170(0) = '1') else 
        ap_const_lv5_0;
    p_i_fu_468_p3 <= 
        ap_const_lv5_10 when (icmp_fu_462_p2(0) = '1') else 
        ap_const_lv5_0;
    p_x_i4_fu_385_p3 <= 
        x_assign_1_fu_377_p3 when (icmp1_fu_362_p2(0) = '1') else 
        tmp_8_fu_333_p1;
    pmat_address0 <= tmp_47_cast_fu_946_p1(13 - 1 downto 0);

    pmat_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pmat_ce0 <= ap_const_logic_1;
        else 
            pmat_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pmat_load_cast_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pmat_q0),32));
    row_fu_974_p2 <= std_logic_vector(unsigned(sample_7_reg_231) + unsigned(ap_const_lv7_7F));
        sample_1_cast1_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sample_1_fu_755_p3),13));

    sample_1_cast_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_1_cast1_fu_763_p1),14));
    sample_1_fu_755_p3 <= 
        sample_6_fu_749_p2 when (tmp_48_fu_725_p1(0) = '1') else 
        sample_7_cast_cast_fu_745_p1;
        sample_2_cast1_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sample_2_fu_999_p3),13));

    sample_2_cast_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_2_cast1_fu_1007_p1),14));
    sample_2_fu_999_p3 <= 
        sample_8_fu_993_p2 when (tmp_64_fu_985_p1(0) = '1') else 
        sample_9_cast67_cast_fu_989_p1;
    sample_3_cast_cast_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_reg_1158),11));
    sample_3_fu_416_p2 <= std_logic_vector(signed(ap_const_lv11_601) - signed(sample_3_cast_cast_fu_413_p1));
    sample_4_fu_422_p3 <= 
        sample_3_fu_416_p2 when (tmp_32_fu_409_p1(0) = '1') else 
        sample_3_cast_cast_fu_413_p1;
        sample_5_cast1_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sample_4_fu_422_p3),13));

    sample_5_cast_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_5_cast1_fu_430_p1),14));
    sample_5_fu_733_p1 <= lut2_q0(5 - 1 downto 0);
    sample_6_fu_749_p2 <= std_logic_vector(signed(ap_const_lv11_601) - signed(sample_7_cast_cast_fu_745_p1));
    sample_7_cast_cast_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_5_fu_733_p1),11));
    sample_8_fu_993_p2 <= std_logic_vector(signed(ap_const_lv11_601) - signed(sample_9_cast67_cast_fu_989_p1));
    sample_9_cast67_cast_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_7_reg_231),11));
    sample_fu_336_p1 <= lut1_q0(4 - 1 downto 0);
    tmp_10_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_700_p4),32));
    tmp_11_fu_550_p2 <= std_logic_vector(shift_left(unsigned(p_x_i4_reg_1176),to_integer(unsigned('0' & ap_const_lv32_8(31-1 downto 0)))));
    tmp_12_fu_568_p4 <= p_1_i9_fu_562_p3(31 downto 28);
    tmp_13_fu_590_p2 <= std_logic_vector(shift_left(unsigned(p_1_i9_fu_562_p3),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    tmp_14_fu_612_p4 <= p_2_i_fu_604_p3(31 downto 30);
    tmp_15_fu_714_p2 <= "1" when (tmp_4_fu_700_p4 = ap_const_lv27_1) else "0";
    tmp_18_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_5_fu_438_p4),32));
    tmp_19_fu_642_p3 <= p_2_i_fu_604_p3(29 downto 29);
    tmp_1_fu_680_p2 <= "1" when (unsigned(n_4_fu_674_p2) > unsigned(ap_const_lv5_1A)) else "0";
    tmp_20_fu_650_p3 <= p_2_i_fu_604_p3(31 downto 31);
    tmp_21_fu_530_p2 <= "1" when (n_6_fu_522_p3 = ap_const_lv5_18) else "0";
    tmp_23_fu_658_p3 <= 
        tmp_19_fu_642_p3 when (icmp4_fu_622_p2(0) = '1') else 
        tmp_20_fu_650_p3;
    tmp_24_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_1_fu_693_p3),64));
    tmp_26_fu_689_p1 <= rnd_1_reg_201(5 - 1 downto 0);
    tmp_27_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_6_fu_771_p4),32));
    tmp_28_fu_863_p2 <= "1" when (n_8_fu_855_p3 = ap_const_lv5_18) else "0";
    tmp_29_fu_883_p2 <= "1" when (unsigned(column_reg_219) < unsigned(ap_const_lv7_6D)) else "0";
    tmp_2_fu_348_p2 <= "1" when (x_assign_reg_1136 = ap_const_lv24_1) else "0";
    tmp_31_fu_686_p1 <= lut1_load_reg_1153(3 - 1 downto 0);
    tmp_32_fu_409_p1 <= tmp_17_reg_192(1 - 1 downto 0);
    tmp_34_fu_452_p4 <= tmp_17_reg_192(31 downto 17);
    tmp_35_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_298_p4),32));
    tmp_36_fu_909_p2 <= "1" when (grp_fu_298_p4 = ap_const_lv31_1) else "0";
    tmp_38_fu_476_p4 <= tmp_17_reg_192(16 downto 9);
    tmp_41_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_298_p4),32));
    tmp_42_fu_1100_p2 <= "1" when (n_10_fu_1092_p3 = ap_const_lv5_18) else "0";
    tmp_43_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(column_reg_219),13));
    tmp_43_fu_486_p4 <= tmp_17_reg_192(31 downto 25);
    tmp_44_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_486_p4),8));
    tmp_45_fu_500_p3 <= 
        tmp_38_fu_476_p4 when (icmp_fu_462_p2(0) = '1') else 
        tmp_44_fu_496_p1;
    tmp_47_cast_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1122_p3),64));
    tmp_48_fu_725_p1 <= rnd_2_reg_210(1 - 1 downto 0);
    tmp_4_fu_700_p4 <= rnd_1_reg_201(31 downto 5);
    tmp_54_fu_737_p3 <= lut2_q0(5 downto 5);
    tmp_55_fu_785_p4 <= rnd_2_reg_210(31 downto 17);
    tmp_56_fu_809_p4 <= rnd_2_reg_210(16 downto 9);
    tmp_57_fu_819_p4 <= rnd_2_reg_210(31 downto 25);
    tmp_58_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_819_p4),8));
    tmp_59_fu_833_p3 <= 
        tmp_56_fu_809_p4 when (icmp6_fu_795_p2(0) = '1') else 
        tmp_58_fu_829_p1;
    tmp_60_fu_889_p1 <= distance_fu_142(31 - 1 downto 0);
    tmp_61_fu_893_p1 <= rnd_4_fu_146(1 - 1 downto 0);
    tmp_62_fu_934_p3 <= sample_7_reg_231(6 downto 6);
    tmp_63_fu_966_p3 <= distance_3_fu_960_p2(31 downto 31);
    tmp_64_fu_985_p1 <= rnd_4_fu_146(1 - 1 downto 0);
    tmp_65_fu_1022_p4 <= rnd_4_fu_146(31 downto 17);
    tmp_66_fu_1046_p4 <= rnd_4_fu_146(16 downto 9);
    tmp_67_fu_1056_p4 <= rnd_4_fu_146(31 downto 25);
    tmp_68_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_1056_p4),8));
    tmp_69_fu_1070_p3 <= 
        tmp_66_fu_1046_p4 when (icmp8_fu_1032_p2(0) = '1') else 
        tmp_68_fu_1066_p1;
    tmp_6_fu_340_p3 <= lut1_q0(4 downto 4);
    tmp_7_fu_353_p4 <= rnd_read(31 downto 24);
    tmp_8_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_reg_1136),32));
    tmp_9_fu_393_p4 <= p_x_i4_fu_385_p3(31 downto 24);
    tmp_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_fu_314_p1),64));
    tmp_s_fu_368_p4 <= rnd_read(23 downto 8);
    x_assign_1_fu_377_p3 <= (tmp_s_fu_368_p4 & ap_const_lv16_0);
    x_assign_5_fu_438_p4 <= tmp_17_reg_192(31 downto 1);
    x_assign_6_fu_771_p4 <= rnd_2_reg_210(31 downto 1);
end behav;
