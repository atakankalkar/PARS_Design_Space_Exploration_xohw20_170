// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_ntt2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_address1,
        a_ce1,
        a_we1,
        a_d1,
        a_q1
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
output   a_we0;
output  [15:0] a_d0;
input  [15:0] a_q0;
output  [7:0] a_address1;
output   a_ce1;
output   a_we1;
output  [15:0] a_d1;
input  [15:0] a_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] a_address0;
reg a_ce0;
reg a_we0;
reg[15:0] a_d0;
reg[7:0] a_address1;
reg a_ce1;
reg a_we1;
reg[15:0] a_d1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] primrt_omega_table_address0;
reg    primrt_omega_table_ce0;
wire   [12:0] primrt_omega_table_q0;
wire   [2:0] primrt_omega_table_address1;
reg    primrt_omega_table_ce1;
wire   [12:0] primrt_omega_table_q1;
reg   [15:0] reg_229;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state17;
wire   [14:0] grp_mod_r_fu_209_ap_return;
reg   [14:0] reg_233;
wire    ap_CS_fsm_state9;
wire    grp_mod_r_fu_209_ap_done;
wire    grp_mod_r_fu_214_ap_done;
reg    ap_block_state9_on_subcall_done;
wire    ap_CS_fsm_state11;
wire    grp_mod_r_fu_219_ap_done;
wire    grp_mod_r_fu_224_ap_done;
reg    ap_block_state11_on_subcall_done;
wire    ap_CS_fsm_state20;
reg    ap_block_state20_on_subcall_done;
wire    ap_CS_fsm_state22;
reg    ap_block_state22_on_subcall_done;
wire   [14:0] grp_mod_r_fu_214_ap_return;
reg   [14:0] reg_237;
wire   [2:0] i_3_fu_248_p2;
reg   [2:0] i_3_reg_671;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_242_p2;
wire   [28:0] primrt_cast_fu_264_p1;
reg   [28:0] primrt_cast_reg_686;
wire    ap_CS_fsm_state3;
wire   [14:0] primrt_omega_table_l_2_fu_268_p1;
wire   [31:0] m_1_fu_272_p2;
reg   [31:0] m_1_reg_696;
wire   [31:0] tmp_101_fu_348_p3;
reg   [31:0] tmp_101_reg_702;
wire  signed [15:0] omega_0_in_cast_fu_356_p1;
reg  signed [15:0] omega_0_in_cast_reg_707;
wire    ap_CS_fsm_state4;
reg   [7:0] a_addr_6_reg_719;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_fu_375_p2;
reg   [7:0] a_addr_7_reg_724;
reg   [7:0] a_addr_8_reg_730;
reg   [7:0] a_addr_9_reg_736;
wire   [31:0] k_1_fu_431_p2;
reg   [31:0] k_1_reg_741;
wire   [28:0] omega_2_fu_639_p2;
reg   [28:0] omega_2_reg_746;
wire   [31:0] j_3_fu_439_p2;
reg   [31:0] j_3_reg_751;
reg   [15:0] a_load_6_reg_756;
wire   [31:0] tmp_65_fu_644_p2;
reg   [31:0] tmp_65_reg_761;
wire    ap_CS_fsm_state7;
wire   [31:0] tmp_72_fu_650_p2;
reg   [31:0] tmp_72_reg_766;
wire   [31:0] tmp_105_cast_fu_485_p1;
reg   [31:0] tmp_105_cast_reg_771;
wire    ap_CS_fsm_state10;
wire   [31:0] tmp_107_cast_fu_496_p1;
reg   [31:0] tmp_107_cast_reg_776;
wire  signed [31:0] tmp_109_cast_fu_507_p1;
reg   [31:0] tmp_109_cast_reg_781;
wire  signed [31:0] tmp_111_cast_fu_518_p1;
reg   [31:0] tmp_111_cast_reg_786;
wire   [14:0] grp_mod_r_fu_219_ap_return;
reg   [14:0] tmp_79_reg_791;
wire   [14:0] grp_mod_r_fu_224_ap_return;
reg   [14:0] tmp_81_reg_796;
wire   [31:0] omega_4_cast_fu_541_p1;
reg   [31:0] omega_4_cast_reg_801;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire  signed [15:0] omega_1_cast_fu_545_p1;
reg  signed [15:0] omega_1_cast_reg_811;
wire    ap_CS_fsm_state16;
wire   [7:0] j_2_fu_555_p2;
reg   [7:0] j_2_reg_820;
wire   [7:0] tmp_103_fu_561_p2;
reg   [7:0] tmp_103_reg_825;
wire   [0:0] exitcond_fu_549_p2;
reg   [7:0] a_addr_reg_830;
wire   [31:0] t1_fu_656_p2;
reg   [31:0] t1_reg_836;
wire    ap_CS_fsm_state18;
wire   [29:0] omega_fu_662_p2;
reg   [29:0] omega_reg_841;
wire   [31:0] omega_2_cast_fu_588_p1;
reg   [31:0] omega_2_cast_reg_846;
wire    ap_CS_fsm_state19;
reg   [7:0] a_addr_5_reg_851;
wire   [31:0] tmp_84_cast_fu_614_p1;
reg   [31:0] tmp_84_cast_reg_857;
wire    ap_CS_fsm_state21;
wire  signed [31:0] tmp_86_cast_fu_625_p1;
reg  signed [31:0] tmp_86_cast_reg_862;
reg   [14:0] tmp_58_reg_867;
wire    grp_mod_r_fu_209_ap_start;
wire    grp_mod_r_fu_209_ap_idle;
wire    grp_mod_r_fu_209_ap_ready;
reg   [31:0] grp_mod_r_fu_209_x;
wire    grp_mod_r_fu_214_ap_start;
wire    grp_mod_r_fu_214_ap_idle;
wire    grp_mod_r_fu_214_ap_ready;
reg   [31:0] grp_mod_r_fu_214_x;
wire    grp_mod_r_fu_219_ap_start;
wire    grp_mod_r_fu_219_ap_idle;
wire    grp_mod_r_fu_219_ap_ready;
wire    grp_mod_r_fu_224_ap_start;
wire    grp_mod_r_fu_224_ap_idle;
wire    grp_mod_r_fu_224_ap_ready;
reg   [31:0] m_reg_132;
wire   [0:0] tmp_102_fu_360_p2;
reg   [2:0] i_reg_144;
reg   [31:0] j_reg_155;
reg   [14:0] omega_0_in_reg_167;
reg   [31:0] k_reg_176;
wire    ap_CS_fsm_state13;
reg   [7:0] j_1_reg_187;
wire    ap_CS_fsm_state23;
reg   [14:0] omega_1_reg_198;
reg    ap_reg_grp_mod_r_fu_209_ap_start;
wire    ap_CS_fsm_state8;
reg    ap_reg_grp_mod_r_fu_214_ap_start;
reg    ap_reg_grp_mod_r_fu_219_ap_start;
reg    ap_reg_grp_mod_r_fu_224_ap_start;
wire   [63:0] tmp_fu_254_p1;
wire   [63:0] tmp_s_fu_259_p1;
wire  signed [63:0] tmp_61_fu_387_p1;
wire  signed [63:0] tmp_63_fu_398_p1;
wire  signed [63:0] tmp_68_fu_415_p1;
wire  signed [63:0] tmp_70_fu_426_p1;
wire   [63:0] tmp_51_fu_573_p1;
wire   [63:0] tmp_54_fu_592_p1;
wire    ap_CS_fsm_state12;
wire  signed [15:0] p_trunc_ext_fu_523_p1;
wire  signed [15:0] p_trunc4_ext_fu_528_p1;
wire  signed [15:0] p_trunc5_ext_fu_533_p1;
wire  signed [15:0] p_trunc6_ext_fu_537_p1;
wire  signed [15:0] p_trunc7_ext_fu_630_p1;
wire  signed [15:0] p_trunc8_ext_fu_635_p1;
wire   [31:0] m_op_op7_fu_286_p2;
wire   [31:0] p_neg_fu_300_p2;
wire   [30:0] p_lshr_fu_306_p4;
wire   [0:0] tmp_97_fu_292_p3;
wire   [30:0] p_neg_t_fu_316_p2;
wire   [30:0] tmp_98_fu_322_p4;
wire   [0:0] tmp_96_fu_278_p3;
wire   [30:0] tmp_99_fu_332_p3;
wire   [30:0] tmp_100_fu_340_p3;
wire   [23:0] tmp_104_fu_365_p4;
wire   [31:0] tmp_60_fu_381_p2;
wire   [31:0] tmp_62_fu_392_p2;
wire   [31:0] tmp1_fu_403_p2;
wire   [31:0] tmp_67_fu_409_p2;
wire   [31:0] tmp_69_fu_420_p2;
wire  signed [15:0] t1_2_trunc_ext_fu_459_p1;
wire  signed [15:0] t2_trunc_ext_fu_471_p1;
wire   [16:0] t1_2_cast_fu_463_p1;
wire   [16:0] u1_1_cast_fu_455_p1;
wire   [16:0] tmp_74_fu_479_p2;
wire   [16:0] t2_cast_fu_475_p1;
wire   [16:0] u2_cast_fu_467_p1;
wire   [16:0] tmp_76_fu_490_p2;
wire   [16:0] tmp_78_fu_501_p2;
wire   [16:0] tmp_80_fu_512_p2;
wire   [7:0] tmp_50_fu_567_p2;
wire  signed [15:0] t1_1_trunc_ext_fu_596_p1;
wire   [16:0] u1_cast_fu_604_p1;
wire   [16:0] t1_1_cast_fu_600_p1;
wire   [16:0] tmp_55_fu_608_p2;
wire   [16:0] tmp_57_fu_619_p2;
wire   [12:0] omega_2_fu_639_p0;
wire   [15:0] omega_2_fu_639_p1;
wire   [15:0] tmp_65_fu_644_p0;
wire   [15:0] tmp_65_fu_644_p1;
wire   [31:0] omega2_fu_449_p1;
wire   [15:0] tmp_72_fu_650_p0;
wire   [15:0] tmp_72_fu_650_p1;
wire   [15:0] t1_fu_656_p0;
wire   [15:0] t1_fu_656_p1;
wire   [13:0] omega_fu_662_p0;
wire   [15:0] omega_fu_662_p1;
reg   [22:0] ap_NS_fsm;
wire   [28:0] omega_2_fu_639_p10;
wire   [29:0] omega_fu_662_p10;
wire   [31:0] t1_fu_656_p00;
wire   [31:0] t1_fu_656_p10;
wire   [31:0] tmp_65_fu_644_p00;
wire   [31:0] tmp_72_fu_650_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_reg_grp_mod_r_fu_209_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_214_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_219_ap_start = 1'b0;
#0 ap_reg_grp_mod_r_fu_224_ap_start = 1'b0;
end

fwd_ntt2_primrt_og8j #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
primrt_omega_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(primrt_omega_table_address0),
    .ce0(primrt_omega_table_ce0),
    .q0(primrt_omega_table_q0),
    .address1(primrt_omega_table_address1),
    .ce1(primrt_omega_table_ce1),
    .q1(primrt_omega_table_q1)
);

mod_r grp_mod_r_fu_209(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_209_ap_start),
    .ap_done(grp_mod_r_fu_209_ap_done),
    .ap_idle(grp_mod_r_fu_209_ap_idle),
    .ap_ready(grp_mod_r_fu_209_ap_ready),
    .x(grp_mod_r_fu_209_x),
    .ap_return(grp_mod_r_fu_209_ap_return)
);

mod_r grp_mod_r_fu_214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_214_ap_start),
    .ap_done(grp_mod_r_fu_214_ap_done),
    .ap_idle(grp_mod_r_fu_214_ap_idle),
    .ap_ready(grp_mod_r_fu_214_ap_ready),
    .x(grp_mod_r_fu_214_x),
    .ap_return(grp_mod_r_fu_214_ap_return)
);

mod_r grp_mod_r_fu_219(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_219_ap_start),
    .ap_done(grp_mod_r_fu_219_ap_done),
    .ap_idle(grp_mod_r_fu_219_ap_idle),
    .ap_ready(grp_mod_r_fu_219_ap_ready),
    .x(tmp_109_cast_reg_781),
    .ap_return(grp_mod_r_fu_219_ap_return)
);

mod_r grp_mod_r_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mod_r_fu_224_ap_start),
    .ap_done(grp_mod_r_fu_224_ap_done),
    .ap_idle(grp_mod_r_fu_224_ap_idle),
    .ap_ready(grp_mod_r_fu_224_ap_ready),
    .x(tmp_111_cast_reg_786),
    .ap_return(grp_mod_r_fu_224_ap_return)
);

RLWE_enc2_mul_mulhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
RLWE_enc2_mul_mulhbi_U15(
    .din0(omega_2_fu_639_p0),
    .din1(omega_2_fu_639_p1),
    .dout(omega_2_fu_639_p2)
);

RLWE_enc2_mul_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_mulibs_U16(
    .din0(tmp_65_fu_644_p0),
    .din1(tmp_65_fu_644_p1),
    .dout(tmp_65_fu_644_p2)
);

RLWE_enc2_mul_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_mulibs_U17(
    .din0(tmp_72_fu_650_p0),
    .din1(tmp_72_fu_650_p1),
    .dout(tmp_72_fu_650_p2)
);

RLWE_enc2_mul_mulibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
RLWE_enc2_mul_mulibs_U18(
    .din0(t1_fu_656_p0),
    .din1(t1_fu_656_p1),
    .dout(t1_fu_656_p2)
);

RLWE_enc2_mul_muljbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
RLWE_enc2_mul_muljbC_U19(
    .din0(omega_fu_662_p0),
    .din1(omega_fu_662_p1),
    .dout(omega_fu_662_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_209_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
            ap_reg_grp_mod_r_fu_209_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_209_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_209_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_214_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
            ap_reg_grp_mod_r_fu_214_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_214_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_214_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_219_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_reg_grp_mod_r_fu_219_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_219_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_219_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_mod_r_fu_224_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_reg_grp_mod_r_fu_224_ap_start <= 1'b1;
        end else if ((grp_mod_r_fu_224_ap_ready == 1'b1)) begin
            ap_reg_grp_mod_r_fu_224_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_102_fu_360_p2 == 1'd1))) begin
        i_reg_144 <= i_3_reg_671;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_144 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
        j_1_reg_187 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        j_1_reg_187 <= j_2_reg_820;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mod_r_fu_209_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        j_reg_155 <= j_3_reg_751;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_155 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_102_fu_360_p2 == 1'd0))) begin
        k_reg_176 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_reg_176 <= k_1_reg_741;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_102_fu_360_p2 == 1'd1))) begin
                m_reg_132[31 : 1] <= m_1_reg_696[31 : 1];
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                m_reg_132[1] <= 1'b1;
        m_reg_132[2] <= 1'b0;
        m_reg_132[3] <= 1'b0;
        m_reg_132[4] <= 1'b0;
        m_reg_132[5] <= 1'b0;
        m_reg_132[6] <= 1'b0;
        m_reg_132[7] <= 1'b0;
        m_reg_132[8] <= 1'b0;
        m_reg_132[9] <= 1'b0;
        m_reg_132[10] <= 1'b0;
        m_reg_132[11] <= 1'b0;
        m_reg_132[12] <= 1'b0;
        m_reg_132[13] <= 1'b0;
        m_reg_132[14] <= 1'b0;
        m_reg_132[15] <= 1'b0;
        m_reg_132[16] <= 1'b0;
        m_reg_132[17] <= 1'b0;
        m_reg_132[18] <= 1'b0;
        m_reg_132[19] <= 1'b0;
        m_reg_132[20] <= 1'b0;
        m_reg_132[21] <= 1'b0;
        m_reg_132[22] <= 1'b0;
        m_reg_132[23] <= 1'b0;
        m_reg_132[24] <= 1'b0;
        m_reg_132[25] <= 1'b0;
        m_reg_132[26] <= 1'b0;
        m_reg_132[27] <= 1'b0;
        m_reg_132[28] <= 1'b0;
        m_reg_132[29] <= 1'b0;
        m_reg_132[30] <= 1'b0;
        m_reg_132[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mod_r_fu_209_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        omega_0_in_reg_167 <= grp_mod_r_fu_209_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        omega_0_in_reg_167 <= primrt_omega_table_l_2_fu_268_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
        omega_1_reg_198 <= 15'd1065;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        omega_1_reg_198 <= reg_237;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
        a_addr_5_reg_851[7 : 1] <= tmp_54_fu_592_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_fu_375_p2 == 1'd1))) begin
        a_addr_6_reg_719 <= tmp_61_fu_387_p1;
        a_addr_7_reg_724[7 : 1] <= tmp_63_fu_398_p1[7 : 1];
        a_addr_8_reg_730 <= tmp_68_fu_415_p1;
        a_addr_9_reg_736[7 : 1] <= tmp_70_fu_426_p1[7 : 1];
        k_1_reg_741 <= k_1_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_549_p2 == 1'd0))) begin
        a_addr_reg_830[7 : 1] <= tmp_51_fu_573_p1[7 : 1];
        tmp_103_reg_825[7 : 1] <= tmp_103_fu_561_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_load_6_reg_756 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_671 <= i_3_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_2_reg_820 <= j_2_fu_555_p2;
        omega_1_cast_reg_811 <= omega_1_cast_fu_545_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_fu_375_p2 == 1'd0))) begin
        j_3_reg_751 <= j_3_fu_439_p2;
        omega_2_reg_746 <= omega_2_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m_1_reg_696[31 : 2] <= m_1_fu_272_p2[31 : 2];
        primrt_cast_reg_686[12 : 0] <= primrt_cast_fu_264_p1[12 : 0];
        tmp_101_reg_702[31 : 1] <= tmp_101_fu_348_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        omega_0_in_cast_reg_707 <= omega_0_in_cast_fu_356_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        omega_2_cast_reg_846[29 : 0] <= omega_2_cast_fu_588_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        omega_4_cast_reg_801[28 : 0] <= omega_4_cast_fu_541_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        omega_reg_841 <= omega_fu_662_p2;
        t1_reg_836 <= t1_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_229 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state22) & (1'b0 == ap_block_state22_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_block_state11_on_subcall_done)))) begin
        reg_233 <= grp_mod_r_fu_209_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_block_state11_on_subcall_done)))) begin
        reg_237 <= grp_mod_r_fu_214_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_105_cast_reg_771[16 : 0] <= tmp_105_cast_fu_485_p1[16 : 0];
        tmp_107_cast_reg_776[16 : 0] <= tmp_107_cast_fu_496_p1[16 : 0];
        tmp_109_cast_reg_781 <= tmp_109_cast_fu_507_p1;
        tmp_111_cast_reg_786 <= tmp_111_cast_fu_518_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (1'b0 == ap_block_state22_on_subcall_done))) begin
        tmp_58_reg_867 <= grp_mod_r_fu_214_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_65_reg_761 <= tmp_65_fu_644_p2;
        tmp_72_reg_766 <= tmp_72_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_block_state11_on_subcall_done))) begin
        tmp_79_reg_791 <= grp_mod_r_fu_219_ap_return;
        tmp_81_reg_796 <= grp_mod_r_fu_224_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_84_cast_reg_857[16 : 0] <= tmp_84_cast_fu_614_p1[16 : 0];
        tmp_86_cast_reg_862 <= tmp_86_cast_fu_625_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_address0 = a_addr_5_reg_851;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        a_address0 = tmp_51_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_address0 = a_addr_8_reg_730;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12))) begin
        a_address0 = a_addr_6_reg_719;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = tmp_63_fu_398_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_address1 = a_addr_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_address1 = tmp_54_fu_592_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_address1 = a_addr_9_reg_736;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_address1 = a_addr_7_reg_724;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_address1 = a_addr_8_reg_730;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = tmp_70_fu_426_p1;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_d0 = p_trunc7_ext_fu_630_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_d0 = p_trunc5_ext_fu_533_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_d0 = p_trunc_ext_fu_523_p1;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_d1 = p_trunc8_ext_fu_635_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_d1 = p_trunc6_ext_fu_537_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_d1 = p_trunc4_ext_fu_528_p1;
    end else begin
        a_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13))) begin
        a_we1 = 1'b1;
    end else begin
        a_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_549_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_549_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mod_r_fu_209_x = tmp_84_cast_reg_857;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mod_r_fu_209_x = t1_reg_836;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_mod_r_fu_209_x = omega_4_cast_reg_801;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mod_r_fu_209_x = tmp_105_cast_reg_771;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mod_r_fu_209_x = tmp_65_reg_761;
    end else begin
        grp_mod_r_fu_209_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_mod_r_fu_214_x = tmp_86_cast_reg_862;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mod_r_fu_214_x = omega_2_cast_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mod_r_fu_214_x = tmp_107_cast_reg_776;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mod_r_fu_214_x = tmp_72_reg_766;
    end else begin
        grp_mod_r_fu_214_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce0 = 1'b1;
    end else begin
        primrt_omega_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        primrt_omega_table_ce1 = 1'b1;
    end else begin
        primrt_omega_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_242_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_102_fu_360_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_fu_375_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_block_state11_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_mod_r_fu_209_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_549_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (1'b0 == ap_block_state22_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11_on_subcall_done = ((grp_mod_r_fu_214_ap_done == 1'b0) | (grp_mod_r_fu_209_ap_done == 1'b0) | (grp_mod_r_fu_224_ap_done == 1'b0) | (grp_mod_r_fu_219_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state20_on_subcall_done = ((grp_mod_r_fu_214_ap_done == 1'b0) | (grp_mod_r_fu_209_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state22_on_subcall_done = ((grp_mod_r_fu_214_ap_done == 1'b0) | (grp_mod_r_fu_209_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_mod_r_fu_214_ap_done == 1'b0) | (grp_mod_r_fu_209_ap_done == 1'b0));
end

assign exitcond1_fu_242_p2 = ((i_reg_144 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond_fu_549_p2 = ((j_1_reg_187 == 8'd128) ? 1'b1 : 1'b0);

assign grp_mod_r_fu_209_ap_start = ap_reg_grp_mod_r_fu_209_ap_start;

assign grp_mod_r_fu_214_ap_start = ap_reg_grp_mod_r_fu_214_ap_start;

assign grp_mod_r_fu_219_ap_start = ap_reg_grp_mod_r_fu_219_ap_start;

assign grp_mod_r_fu_224_ap_start = ap_reg_grp_mod_r_fu_224_ap_start;

assign i_3_fu_248_p2 = (i_reg_144 + 3'd1);

assign icmp_fu_375_p2 = (($signed(tmp_104_fu_365_p4) < $signed(24'd1)) ? 1'b1 : 1'b0);

assign j_2_fu_555_p2 = (j_1_reg_187 + 8'd1);

assign j_3_fu_439_p2 = (j_reg_155 + 32'd2);

assign k_1_fu_431_p2 = (m_1_reg_696 + k_reg_176);

assign m_1_fu_272_p2 = m_reg_132 << 32'd1;

assign m_op_op7_fu_286_p2 = (m_reg_132 | 32'd1);

assign omega2_fu_449_p1 = $unsigned(omega_0_in_cast_reg_707);

assign omega_0_in_cast_fu_356_p1 = $signed(omega_0_in_reg_167);

assign omega_1_cast_fu_545_p1 = $signed(omega_1_reg_198);

assign omega_2_cast_fu_588_p1 = omega_reg_841;

assign omega_2_fu_639_p0 = primrt_cast_reg_686;

assign omega_2_fu_639_p1 = omega_2_fu_639_p10;

assign omega_2_fu_639_p10 = $unsigned(omega_0_in_cast_reg_707);

assign omega_4_cast_fu_541_p1 = omega_2_reg_746;

assign omega_fu_662_p0 = 30'd5118;

assign omega_fu_662_p1 = omega_fu_662_p10;

assign omega_fu_662_p10 = $unsigned(omega_1_cast_reg_811);

assign p_lshr_fu_306_p4 = {{p_neg_fu_300_p2[31:1]}};

assign p_neg_fu_300_p2 = (m_reg_132 ^ 32'd4294967295);

assign p_neg_t_fu_316_p2 = (31'd0 - p_lshr_fu_306_p4);

assign p_trunc4_ext_fu_528_p1 = $signed(reg_237);

assign p_trunc5_ext_fu_533_p1 = $signed(tmp_79_reg_791);

assign p_trunc6_ext_fu_537_p1 = $signed(tmp_81_reg_796);

assign p_trunc7_ext_fu_630_p1 = $signed(reg_233);

assign p_trunc8_ext_fu_635_p1 = $signed(tmp_58_reg_867);

assign p_trunc_ext_fu_523_p1 = $signed(reg_233);

assign primrt_cast_fu_264_p1 = primrt_omega_table_q0;

assign primrt_omega_table_address0 = tmp_fu_254_p1;

assign primrt_omega_table_address1 = tmp_s_fu_259_p1;

assign primrt_omega_table_l_2_fu_268_p1 = primrt_omega_table_q1;

assign t1_1_cast_fu_600_p1 = $unsigned(t1_1_trunc_ext_fu_596_p1);

assign t1_1_trunc_ext_fu_596_p1 = $signed(reg_233);

assign t1_2_cast_fu_463_p1 = $unsigned(t1_2_trunc_ext_fu_459_p1);

assign t1_2_trunc_ext_fu_459_p1 = $signed(reg_233);

assign t1_fu_656_p0 = t1_fu_656_p00;

assign t1_fu_656_p00 = reg_229;

assign t1_fu_656_p1 = t1_fu_656_p10;

assign t1_fu_656_p10 = $unsigned(omega_1_cast_reg_811);

assign t2_cast_fu_475_p1 = $unsigned(t2_trunc_ext_fu_471_p1);

assign t2_trunc_ext_fu_471_p1 = $signed(reg_237);

assign tmp1_fu_403_p2 = (m_reg_132 + k_reg_176);

assign tmp_100_fu_340_p3 = ((tmp_96_fu_278_p3[0:0] === 1'b1) ? 31'd0 : tmp_99_fu_332_p3);

assign tmp_101_fu_348_p3 = {{tmp_100_fu_340_p3}, {1'd0}};

assign tmp_102_fu_360_p2 = ((j_reg_155 == tmp_101_reg_702) ? 1'b1 : 1'b0);

assign tmp_103_fu_561_p2 = j_1_reg_187 << 8'd1;

assign tmp_104_fu_365_p4 = {{k_reg_176[31:8]}};

assign tmp_105_cast_fu_485_p1 = tmp_74_fu_479_p2;

assign tmp_107_cast_fu_496_p1 = tmp_76_fu_490_p2;

assign tmp_109_cast_fu_507_p1 = $signed(tmp_78_fu_501_p2);

assign tmp_111_cast_fu_518_p1 = $signed(tmp_80_fu_512_p2);

assign tmp_50_fu_567_p2 = (tmp_103_fu_561_p2 | 8'd1);

assign tmp_51_fu_573_p1 = tmp_50_fu_567_p2;

assign tmp_54_fu_592_p1 = tmp_103_reg_825;

assign tmp_55_fu_608_p2 = (u1_cast_fu_604_p1 + t1_1_cast_fu_600_p1);

assign tmp_57_fu_619_p2 = (u1_cast_fu_604_p1 - t1_1_cast_fu_600_p1);

assign tmp_60_fu_381_p2 = (k_reg_176 + j_reg_155);

assign tmp_61_fu_387_p1 = $signed(tmp_60_fu_381_p2);

assign tmp_62_fu_392_p2 = (tmp_60_fu_381_p2 | 32'd1);

assign tmp_63_fu_398_p1 = $signed(tmp_62_fu_392_p2);

assign tmp_65_fu_644_p0 = tmp_65_fu_644_p00;

assign tmp_65_fu_644_p00 = reg_229;

assign tmp_65_fu_644_p1 = omega2_fu_449_p1;

assign tmp_67_fu_409_p2 = (tmp1_fu_403_p2 + j_reg_155);

assign tmp_68_fu_415_p1 = $signed(tmp_67_fu_409_p2);

assign tmp_69_fu_420_p2 = (tmp_67_fu_409_p2 | 32'd1);

assign tmp_70_fu_426_p1 = $signed(tmp_69_fu_420_p2);

assign tmp_72_fu_650_p0 = tmp_72_fu_650_p00;

assign tmp_72_fu_650_p00 = a_load_6_reg_756;

assign tmp_72_fu_650_p1 = omega2_fu_449_p1;

assign tmp_74_fu_479_p2 = (t1_2_cast_fu_463_p1 + u1_1_cast_fu_455_p1);

assign tmp_76_fu_490_p2 = (t2_cast_fu_475_p1 + u2_cast_fu_467_p1);

assign tmp_78_fu_501_p2 = (u1_1_cast_fu_455_p1 - t1_2_cast_fu_463_p1);

assign tmp_80_fu_512_p2 = (u2_cast_fu_467_p1 - t2_cast_fu_475_p1);

assign tmp_84_cast_fu_614_p1 = tmp_55_fu_608_p2;

assign tmp_86_cast_fu_625_p1 = $signed(tmp_57_fu_619_p2);

assign tmp_96_fu_278_p3 = m_reg_132[32'd31];

assign tmp_97_fu_292_p3 = m_op_op7_fu_286_p2[32'd31];

assign tmp_98_fu_322_p4 = {{m_op_op7_fu_286_p2[31:1]}};

assign tmp_99_fu_332_p3 = ((tmp_97_fu_292_p3[0:0] === 1'b1) ? p_neg_t_fu_316_p2 : tmp_98_fu_322_p4);

assign tmp_fu_254_p1 = i_reg_144;

assign tmp_s_fu_259_p1 = i_3_fu_248_p2;

assign u1_1_cast_fu_455_p1 = a_q0;

assign u1_cast_fu_604_p1 = a_q1;

assign u2_cast_fu_467_p1 = a_q1;

always @ (posedge ap_clk) begin
    primrt_cast_reg_686[28:13] <= 16'b0000000000000000;
    m_1_reg_696[1:0] <= 2'b00;
    tmp_101_reg_702[0] <= 1'b0;
    a_addr_7_reg_724[0] <= 1'b1;
    a_addr_9_reg_736[0] <= 1'b1;
    tmp_105_cast_reg_771[31:17] <= 15'b000000000000000;
    tmp_107_cast_reg_776[31:17] <= 15'b000000000000000;
    omega_4_cast_reg_801[31:29] <= 3'b000;
    tmp_103_reg_825[0] <= 1'b0;
    a_addr_reg_830[0] <= 1'b1;
    omega_2_cast_reg_846[31:30] <= 2'b00;
    a_addr_5_reg_851[0] <= 1'b0;
    tmp_84_cast_reg_857[31:17] <= 15'b000000000000000;
    m_reg_132[0] <= 1'b0;
end

endmodule //fwd_ntt2
